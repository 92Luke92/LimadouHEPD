%!PS-Adobe-3.0
%%Title: aiglong4.C
%%For: wjb
%%Creator: a2ps version 4.14
%%CreationDate: Sat Feb  7 15:07:25 2015
%%BoundingBox: 24 24 588 768
%%DocumentData: Clean7Bit
%%Orientation: Landscape
%%Pages: 7
%%PageOrder: Ascend
%%DocumentMedia: Letter 612 792 0 () ()
%%DocumentNeededResources: font Courier
%%+ font Courier-Bold
%%+ font Courier-BoldOblique
%%+ font Courier-Oblique
%%+ font Helvetica
%%+ font Helvetica-Bold
%%+ font Symbol
%%+ font Times-Bold
%%+ font Times-Roman
%%DocumentProcessColors: Black 
%%DocumentSuppliedResources: procset a2ps-a2ps-hdr
%%+ procset a2ps-black+white-Prolog
%%+ encoding ISO-8859-1Encoding
%%EndComments
/a2psdict 200 dict def
a2psdict begin
%%BeginProlog
%%Copyright: (c) 1988, 89, 90, 91, 92, 93 Miguel Santana
%%Copyright: (c) 1995, 96, 97, 98 Akim Demaille, Miguel Santana
% Check PostScript language level.
/languagelevel where {
  pop /gs_languagelevel languagelevel def
} {
  /gs_languagelevel 1 def
} ifelse

% EPSF import as in the Red Book
/BeginInclude {
  /b4_Inc_state save def    		% Save state for cleanup
  /dict_count countdictstack def	% Count objects on dict stack
  /op_count count 1 sub def		% Count objects on operand stack 
  userdict begin
    0 setgray 0 setlinecap
    1 setlinewidth 0 setlinejoin
    10 setmiterlimit [ ] 0 setdash newpath
    gs_languagelevel 1 ne {
      false setstrokeadjust false setoverprint 
    } if
} bind def

/EndInclude {
  count op_count sub { pos } repeat	% Clean up stacks
  countdictstack dict_count sub { end } repeat
  b4_Inc_state restore
} bind def

/BeginEPSF {
  BeginInclude
  /showpage { } def
} bind def

/EndEPSF {
  EndInclude
} bind def

% Page prefeed
/page_prefeed {         % bool -> -
  statusdict /prefeed known {
    statusdict exch /prefeed exch put
  } {
    pop
  } ifelse
} bind def

/deffont {
  findfont exch scalefont def
} bind def

/reencode_font {
  findfont reencode 2 copy definefont pop def
} bind def

% Function c-show (str => -)
% centers text only according to x axis.
/c-show { 
  dup stringwidth pop
  2 div neg 0 rmoveto
  show
} bind def

% Function l-show (str => -)
% prints texts so that it ends at currentpoint
/l-show {
  dup stringwidth pop neg 
  0 
  rmoveto show
} bind def

% center-fit show (str w => -)
% show centered, and scale currentfont so that the width is less than w
/cfshow {
  exch dup stringwidth pop
  % If the title is too big, try to make it smaller
  3 2 roll 2 copy
  gt
  { % if, i.e. too big
    exch div
    currentfont exch scalefont setfont
  } { % ifelse
    pop pop 
  }
  ifelse
  c-show			% center title
} bind def

% Return the y size of the current font
% - => fontsize
/currentfontsize {
  currentfont /FontType get 0 eq {
    currentfont /FontMatrix get 3 get
  }{
    currentfont /FontMatrix get 3 get 1000 mul
  } ifelse
} bind def

% reencode the font
% <encoding-vector> <fontdict> -> <newfontdict>
/reencode { %def
  dup length 5 add dict begin
    { %forall
      % <vector> <key> <val>
      1 index /FID ne 
      { def }{ pop pop } ifelse
    } forall
    /Encoding exch def % -

    % Use the font's bounding box to determine the ascent, descent,
    % and overall height; don't forget that these values have to be
    % transformed using the font's matrix.
    % We use `load' because sometimes BBox is executable, sometimes not.
    % Since we need 4 numbers an not an array avoid BBox from being executed
    /FontBBox load aload pop
    FontMatrix transform /Ascent exch def pop
    FontMatrix transform /Descent exch def pop
    /FontHeight Ascent Descent sub def

    % Get the underline position and thickness if they're defined.
    % Use 1 if they are not defined.
    currentdict /FontInfo 2 copy known
    { get
      /UnderlinePosition 2 copy % <FontInfo> /UP <FontInfo> /UP
      2 copy known
      { get }{ pop pop 1 } ifelse
      0 exch FontMatrix transform exch pop
      def % <FontInfo>

      /UnderlineThickness 2 copy % <FontInfo> /UT <FontInfo> /UT
      2 copy known
      { get }{ pop pop 1 } ifelse
      0 exch FontMatrix transform exch pop
      def % <FontInfo>
      pop % -
    }{ pop pop
    } ifelse

    currentdict
  end 
} bind def

% composite fonts for ASCII-EUC mixed string
% Version 1.2 1/31/1990
% Orignal Ken'ichi HANDA (handa@etl.go.jp)
% Modified Norio Katayama (katayama@rd.nacsis.ac.jp),1998
% Extend & Fix Koji Nakamaru (maru@on.cs.keio.ac.jp), 1999
% Anyone can freely copy, modify, distribute this program.

/copyfont {	% font-dic extra-entry-count  copyfont  font-dic
	1 index maxlength add dict begin
	{	1 index /FID ne 2 index /UniqueID ne and
		{def} {pop pop} ifelse
	} forall
	currentdict
	end
} bind def

/compositefont { % ASCIIFontName EUCFontName RomanScale RomanOffset Rot(T/F) compositefont font
    /RomanRotation exch def
    /RomanOffset exch def
    /RomanScale exch def
    userdict /fixeucfont_dict known not {
	userdict begin
	    /fixeucfont_dict 2 dict begin
		/UpperByteEncoding [
		    16#00 1 16#20 { pop 0 } for
		    16#21 1 16#28 { 16#20 sub } for
		    16#29 1 16#2F { pop 0 } for
		    16#30 1 16#74 { 16#27 sub } for
		    16#75 1 16#FF { pop 0 } for
		] def
	        /LowerByteEncoding [
		    16#00 1 16#A0 { pop /.notdef } for
		    16#A1 1 16#FE { 16#80 sub 16 2 string cvrs
				    (cXX) dup 1 4 -1 roll
				    putinterval cvn } for
		    /.notdef
		] def
		currentdict
	    end def
	end
    } if
    findfont dup /FontType get 0 eq {
	14 dict begin
	    %
	    % 7+8 bit EUC font
	    %
	    12 dict begin
		/EUCFont exch def
		/FontInfo (7+8 bit EUC font) readonly def
		/PaintType 0 def
		/FontType 0 def
		/FontMatrix matrix def
		% /FontName
		/Encoding fixeucfont_dict /UpperByteEncoding get def
		/FMapType 2 def
		EUCFont /WMode known
		{ EUCFont /WMode get /WMode exch def }
		{ /WMode 0 def } ifelse
		/FDepVector [
		    EUCFont /FDepVector get 0 get
		    [ 16#21 1 16#28 {} for 16#30 1 16#74 {} for ]
		    {
			13 dict begin
			    /EUCFont EUCFont def
			    /UpperByte exch 16#80 add def	
			    % /FontName
			    /FontInfo (EUC lower byte font) readonly def
			    /PaintType 0 def
			    /FontType 3 def
			    /FontMatrix matrix def
			    /FontBBox {0 0 0 0} def
			    /Encoding
				fixeucfont_dict /LowerByteEncoding get def
			    % /UniqueID
			    % /WMode
			    /BuildChar {
				gsave
				exch dup /EUCFont get setfont
				/UpperByte get
				2 string
				dup 0 4 -1 roll put
				dup 1 4 -1 roll put
				dup stringwidth setcharwidth
				0 0 moveto show
				grestore
			    } bind def
			    currentdict
			end
			/lowerbytefont exch definefont
		    } forall
		] def
		currentdict
	    end
	    /eucfont exch definefont
	    exch
	    findfont 1 copyfont dup begin
		RomanRotation {
			/FontMatrix FontMatrix
			[ 0 RomanScale neg RomanScale 0 RomanOffset neg 0 ]
			matrix concatmatrix def
		}{
			/FontMatrix FontMatrix
			[ RomanScale 0 0 RomanScale 0 RomanOffset ] matrix concatmatrix
			def
			/CDevProc
			    {pop pop pop pop 0 exch -1000 exch 2 div 880} def
		} ifelse
	    end
	    /asciifont exch definefont
	    exch
	    /FDepVector [ 4 2 roll ] def
	    /FontType 0 def
	    /WMode 0 def
	    /FMapType 4 def
	    /FontMatrix matrix def
	    /Encoding [0 1] def
	    /FontBBox {0 0 0 0} def
%	    /FontHeight 1.0 def % XXXX
	    /FontHeight RomanScale 1.0 ge { RomanScale }{ 1.0 } ifelse def
	    /Descent -0.3 def   % XXXX
	    currentdict
	end
	/tmpfont exch definefont
	pop
	/tmpfont findfont
    }{
	pop findfont 0 copyfont
    } ifelse
} def	

/slantfont {	% FontName slant-degree  slantfont  font'
    exch findfont 1 copyfont begin
    [ 1 0 4 -1 roll 1 0 0 ] FontMatrix exch matrix concatmatrix
    /FontMatrix exch def
    currentdict
    end
} def

% Function print line number (<string> # -)
/# {
  gsave
    sx cw mul neg 2 div 0 rmoveto
    f# setfont
    c-show
  grestore
} bind def

% -------- Some routines to enlight plain b/w printings ---------

% Underline
% width --
/dounderline {
  currentpoint
  gsave
    moveto
    0 currentfont /Descent get currentfontsize mul rmoveto
    0 rlineto
    stroke
  grestore
} bind def

% Underline a string
% string --
/dounderlinestring {
  stringwidth pop
  dounderline
} bind def

/UL {
  /ul exch store
} bind def

% Draw a box of WIDTH wrt current font
% width --
/dobox {
  currentpoint
  gsave
    newpath
    moveto
    0 currentfont /Descent get currentfontsize mul rmoveto
    dup 0 rlineto
    0 currentfont /FontHeight get currentfontsize mul rlineto
    neg 0 rlineto
    closepath
    stroke
  grestore
} bind def

/BX {
  /bx exch store
} bind def

% Box a string
% string --
/doboxstring {
  stringwidth pop
  dobox
} bind def

%
% ------------- Color routines ---------------
%
/FG /setrgbcolor load def

% Draw the background
% width --
/dobackground {
  currentpoint
  gsave
    newpath
    moveto
    0 currentfont /Descent get currentfontsize mul rmoveto
    dup 0 rlineto
    0 currentfont /FontHeight get currentfontsize mul rlineto
    neg 0 rlineto
    closepath
    bgcolor aload pop setrgbcolor
    fill
  grestore
} bind def

% Draw bg for a string
% string --
/dobackgroundstring {
  stringwidth pop
  dobackground
} bind def


/BG {
  dup /bg exch store
  { mark 4 1 roll ] /bgcolor exch store } if
} bind def


/Show {
  bg { dup dobackgroundstring } if
  ul { dup dounderlinestring } if
  bx { dup doboxstring } if
  show
} bind def

% Function T(ab), jumps to the n-th tabulation in the current line
/T {
  cw mul x0 add
  bg { dup currentpoint pop sub dobackground } if
  ul { dup currentpoint pop sub dounderline } if
  bx { dup currentpoint pop sub dobox } if
  y0 moveto
} bind def

% Function n: move to the next line
/n {
  /y0 y0 bfs sub store
  x0 y0 moveto
} bind def

% Function N: show and move to the next line
/N {
  Show
  /y0 y0 bfs sub store
  x0 y0 moveto
} bind def

/S {
  Show
} bind def

%%BeginResource: procset a2ps-a2ps-hdr 2.0 2
%%Copyright: (c) 1988, 89, 90, 91, 92, 93 Miguel Santana
%%Copyright: (c) 1995, 96, 97, 98 Akim Demaille, Miguel Santana
% Function title: prints page header.
% <ct> <rt> <lt> are passed as argument
/title { 
  % 1. Draw the background
  x v get y v get moveto
  gsave
    0 th 2 div neg rmoveto 
    th setlinewidth
    0.95 setgray
    pw 0 rlineto stroke
  grestore
  % 2. Border it
  gsave
    0.7 setlinewidth
    pw 0 rlineto
    0 th neg rlineto
    pw neg 0 rlineto
    closepath stroke
  grestore
  % stk: ct rt lt
  x v get y v get th sub 1 add moveto
%%IncludeResource: font Helvetica
  fHelvetica fnfs 0.8 mul scalefont setfont
  % 3. The left title
  gsave
    dup stringwidth pop fnfs 0.8 mul add exch % leave space took on stack
    fnfs 0.8 mul hm rmoveto
    show			% left title
  grestore
  exch
  % stk: ct ltw rt
  % 4. the right title
  gsave
    dup stringwidth pop fnfs 0.8 mul add exch % leave space took on stack
    dup
    pw exch stringwidth pop fnfs 0.8 mul add sub
    hm
    rmoveto
    show			% right title
  grestore
  % stk: ct ltw rtw
  % 5. the center title
  gsave
    pw 3 1 roll
    % stk: ct pw ltw rtw
    3 copy 
    % Move to the center of the left room
    sub add 2 div hm rmoveto
    % What is the available space in here?
    add sub fnfs 0.8 mul sub fnfs 0.8 mul sub
    % stk: ct space_left
%%IncludeResource: font Helvetica-Bold
  fHelvetica-Bold fnfs scalefont setfont
    cfshow
  grestore
} bind def

% Function border: prints virtual page border
/border { %def
  gsave				% print four sides
    0 setgray
    x v get y v get moveto
    0.7 setlinewidth		% of the square
    pw 0 rlineto
    0 ph neg rlineto
    pw neg 0 rlineto
    closepath stroke
  grestore
} bind def

% Function water: prints a water mark in background
/water { %def
  gsave
    scx scy moveto rotate
%%IncludeResource: font Times-Bold
  fTimes-Bold 100 scalefont setfont
    .97 setgray
    dup stringwidth pop 2 div neg -50 rmoveto
    show
  grestore
} bind def

% Function rhead: prints the right header
/rhead {  %def
  lx ly moveto
  fHelvetica fnfs 0.8 mul scalefont setfont
  l-show
} bind def

% Function footer (cf rf lf -> -)
/footer {
  fHelvetica fnfs 0.8 mul scalefont setfont
  dx dy moveto
  show

  snx sny moveto
  l-show
  
  fnx fny moveto
  c-show
} bind def
%%EndResource
%%BeginResource: procset a2ps-black+white-Prolog 2.0 1

% Function T(ab), jumps to the n-th tabulation in the current line
/T { 
  cw mul x0 add y0 moveto
} bind def

% Function n: move to the next line
/n { %def
  /y0 y0 bfs sub store
  x0 y0 moveto
} bind def

% Function N: show and move to the next line
/N {
  Show
  /y0 y0 bfs sub store
  x0 y0 moveto
}  bind def

/S {
  Show
} bind def

/p {
  false UL
  false BX
  fCourier bfs scalefont setfont
  Show
} bind def

/sy {
  false UL
  false BX
  fSymbol bfs scalefont setfont
  Show
} bind def

/k {
  false UL
  false BX
  fCourier-Oblique bfs scalefont setfont
  Show
} bind def

/K {
  false UL
  false BX
  fCourier-Bold bfs scalefont setfont
  Show
} bind def

/c {
  false UL
  false BX
  fCourier-Oblique bfs scalefont setfont
  Show
} bind def

/C {
  false UL
  false BX
  fCourier-BoldOblique bfs scalefont setfont
  Show 
} bind def

/l {
  false UL
  false BX
  fHelvetica bfs scalefont setfont
  Show
} bind def

/L {
  false UL
  false BX
  fHelvetica-Bold bfs scalefont setfont
  Show 
} bind def

/str{
  false UL
  false BX
  fTimes-Roman bfs scalefont setfont
  Show
} bind def

/e{
  false UL
  true BX
  fHelvetica-Bold bfs scalefont setfont
  Show
} bind def

%%EndResource
%%EndProlog
%%BeginSetup
%%IncludeResource: font Courier
%%IncludeResource: font Courier-Oblique
%%IncludeResource: font Courier-Bold
%%IncludeResource: font Times-Roman
%%IncludeResource: font Symbol
%%IncludeResource: font Courier-BoldOblique
%%BeginResource: encoding ISO-8859-1Encoding
/ISO-8859-1Encoding [
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/space /exclam /quotedbl /numbersign /dollar /percent /ampersand /quoteright 
/parenleft /parenright /asterisk /plus /comma /minus /period /slash 
/zero /one /two /three /four /five /six /seven 
/eight /nine /colon /semicolon /less /equal /greater /question 
/at /A /B /C /D /E /F /G 
/H /I /J /K /L /M /N /O 
/P /Q /R /S /T /U /V /W 
/X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore 
/quoteleft /a /b /c /d /e /f /g 
/h /i /j /k /l /m /n /o 
/p /q /r /s /t /u /v /w 
/x /y /z /braceleft /bar /braceright /asciitilde /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/space /exclamdown /cent /sterling /currency /yen /brokenbar /section 
/dieresis /copyright /ordfeminine /guillemotleft /logicalnot /hyphen /registered /macron 
/degree /plusminus /twosuperior /threesuperior /acute /mu /paragraph /bullet 
/cedilla /onesuperior /ordmasculine /guillemotright /onequarter /onehalf /threequarters /questiondown 
/Agrave /Aacute /Acircumflex /Atilde /Adieresis /Aring /AE /Ccedilla 
/Egrave /Eacute /Ecircumflex /Edieresis /Igrave /Iacute /Icircumflex /Idieresis 
/Eth /Ntilde /Ograve /Oacute /Ocircumflex /Otilde /Odieresis /multiply 
/Oslash /Ugrave /Uacute /Ucircumflex /Udieresis /Yacute /Thorn /germandbls 
/agrave /aacute /acircumflex /atilde /adieresis /aring /ae /ccedilla 
/egrave /eacute /ecircumflex /edieresis /igrave /iacute /icircumflex /idieresis 
/eth /ntilde /ograve /oacute /ocircumflex /otilde /odieresis /divide 
/oslash /ugrave /uacute /ucircumflex /udieresis /yacute /thorn /ydieresis 
] def
%%EndResource
% Initialize page description variables.
/sh 612 def
/sw 792 def
/llx 24 def
/urx 768 def
/ury 588 def
/lly 24 def
/#copies 1 def
/th 15.000000 def
/fnfs 11 def
/bfs 7.493857 def
/cw 4.496314 def

% Dictionary for ISO-8859-1 support
/iso1dict 8 dict begin
  /fCourier ISO-8859-1Encoding /Courier reencode_font
  /fCourier-Bold ISO-8859-1Encoding /Courier-Bold reencode_font
  /fCourier-BoldOblique ISO-8859-1Encoding /Courier-BoldOblique reencode_font
  /fCourier-Oblique ISO-8859-1Encoding /Courier-Oblique reencode_font
  /fHelvetica ISO-8859-1Encoding /Helvetica reencode_font
  /fHelvetica-Bold ISO-8859-1Encoding /Helvetica-Bold reencode_font
  /fTimes-Bold ISO-8859-1Encoding /Times-Bold reencode_font
  /fTimes-Roman ISO-8859-1Encoding /Times-Roman reencode_font
currentdict end def
/bgcolor [ 0 0 0 ] def
/bg false def
/ul false def
/bx false def
% The font for line numbering
/f# /Helvetica findfont bfs .6 mul scalefont def
/fSymbol /Symbol findfont def
/hm fnfs 0.25 mul def
/pw
   cw 81.400000 mul
def
/ph
   522.321860 th add
def
/pmw urx llx sub pw 2 mul sub 1 div def
/pmh 0 def
/v 0 def
/x [
  0
  dup pmw add pw add
] def
/y [
  pmh ph add 0 mul ph add
  dup
] def
/scx sw 2 div def
/scy sh 2 div def
/snx urx def
/sny lly 2 add def
/dx llx def
/dy sny def
/fnx scx def
/fny dy def
/lx snx def
/ly ury fnfs 0.8 mul sub def
/sx 0 def
/tab 8 def
/x0 0 def
/y0 0 def
%%EndSetup

%%Page: (1-2) 1
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.147420 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
() p n
(void tviewer\(\) {) N
(  //  TBrowser *tb = new TBrowser\(\);) N
(  gSystem->Load\("libTreeViewer.so"\);) N
(  new TTreeViewer\(\);) N
(  return;) N
() N
(}) N
(void tbrowser\(\) {) N
(  TBrowser *tb = new TBrowser\(\);) N
(  //  gSystem->Load\("libTreeViewer.so"\);) N
(  //  new TTreeViewer\(\);) N
(  return;) N
(}) N
() N
(void rtheta_e\(float ec\) {) N
() N
(  float theERange = ec;) N
(  char chfich[100];) N
(  sprintf\(chfich,"HistElectron_acc_%3.1f_MeV.root",ec\);) N
(  printf\("chfich %s\\n",chfich\);) N
(  TFile *f = new TFile\(chfich\);) N
(  f->ls\(\);) N
() N
(  char chist[60];) N
(  char chist2[60];) N
(  char ctext[60];) N
(  float ce[15] = {2.0, 3.0, 5.0, 10.0, 15.0, 25.0, 35.0, 45.0, 55.0, 75.0, 100.0) N
(,) N
() S 8 T () S 16 T (  125.0, 150.0, 200.0, 1.5};) N
() N
(  TH2D *hrtheta2d[3];) N
(  TH1D *hproj;) N
(  TH1D *hrtheta[3];) N
(  TLatex *trtheta;  ) N
() N
(  char chistg[10];) N
(  char chista[10];) N
(  char chistasv[10];) N
() N
(  if\(theERange == 2.0\){) N
(    sprintf\(chistg,"h1000"\);) N
(    sprintf\(chista,"h1100"\);) N
(    sprintf\(chistasv,"h1200"\);) N
(    sprintf\(ctext,"T_{e} = %.1f MeV",ce[0]\);) N
(  }else if\(theERange == 3\){) N
(    sprintf\(chistg,"h1001"\);) N
(    sprintf\(chista,"h1101"\);) N
(    sprintf\(chistasv,"h1201"\);) N
(    sprintf\(ctext,"T_{e} = %.1f MeV",ce[1]\);) N
(  }else if\(theERange == 5\){) N
(    sprintf\(chistg,"h1002"\);) N
(    sprintf\(chista,"h1102"\);) N
(    sprintf\(chistasv,"h1202"\);) N
(    sprintf\(ctext,"T_{e} = %.1f MeV",ce[2]\);) N
(  }else if\(theERange == 10\){) N
(    sprintf\(chistg,"h1003"\);) N
(    sprintf\(chista,"h1103"\);) N
(    sprintf\(chistasv,"h1203"\);) N
(    sprintf\(ctext,"T_{e} = %.1f MeV",ce[3]\);) N
(  }else if\(theERange == 15\){) N
(    sprintf\(chistg,"h1004"\);) N
(    sprintf\(chista,"h1104"\);) N
(    sprintf\(chistasv,"h1204"\);) N
(    sprintf\(ctext,"T_{e} = %.1f MeV",ce[4]\);) N
(  }else if\(theERange == 25\){) N
(    sprintf\(chistg,"h1005"\);) N
(    sprintf\(chista,"h1105"\);) N
(    sprintf\(chistasv,"h1205"\);) N
(aiglong4.C) (Page 1/14) (Feb 07, 15 15:04) title
border
/v 1 store
/x0 x v get 3.147420 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(    sprintf\(ctext,"T_{e} = %.1f MeV",ce[5]\);) p n
(  }else if\(theERange == 35\){) N
(    sprintf\(chistg,"h1006"\);) N
(    sprintf\(chista,"h1106"\);) N
(    sprintf\(chistasv,"h1206"\);) N
(    sprintf\(ctext,"T_{e} = %.1f MeV",ce[6]\);) N
(  }else if\(theERange == 45\){) N
(    sprintf\(chistg,"h1007"\);) N
(    sprintf\(chista,"h1107"\);) N
(    sprintf\(chistasv,"h1207"\);) N
(    sprintf\(ctext,"T_{e} = %.1f MeV",ce[7]\);) N
(  }else if\(theERange == 55\){) N
(    sprintf\(chistg,"h1008"\);) N
(    sprintf\(chista,"h1108"\);) N
(    sprintf\(chistasv,"h1208"\);) N
(    sprintf\(ctext,"T_{e} = %.1f MeV",ce[8]\);) N
(  }else if\(theERange == 75\){) N
(    sprintf\(chistg,"h1009"\);) N
(    sprintf\(chista,"h1109"\);) N
(    sprintf\(chistasv,"h1209"\);) N
(    sprintf\(ctext,"T_{e} = %.1f MeV",ce[9]\);) N
(  }else if\(theERange == 100\){) N
(    sprintf\(chistg,"h1010"\);) N
(    sprintf\(chista,"h1110"\);) N
(    sprintf\(chistasv,"h1210"\);) N
(    sprintf\(ctext,"T_{e} = %.1f MeV",ce[10]\);) N
(  }else if\(theERange == 125\){) N
(    sprintf\(chistg,"h1011"\);) N
(    sprintf\(chista,"h1111"\);) N
(    sprintf\(chistasv,"h1211"\);) N
(    sprintf\(ctext,"T_{e} = %.1f MeV",ce[11]\);) N
(  }else if\(theERange == 150\){) N
(    sprintf\(chistg,"h1012"\);) N
(    sprintf\(chista,"h1112"\);) N
(    sprintf\(chistasv,"h1212"\);) N
(    sprintf\(ctext,"T_{e} = %.1f MeV",ce[12]\);) N
(  }else if\(theERange == 200\){) N
(    sprintf\(chistg,"h1013"\);) N
(    sprintf\(chista,"h1113"\);) N
(    sprintf\(chistasv,"h1213"\);) N
(    sprintf\(ctext,"T_{e} = %.1f MeV",ce[13]\);) N
(  }else if\(theERange == 1.5\){) N
(    sprintf\(chistg,"h1014"\);) N
(    sprintf\(chista,"h1114"\);) N
(    sprintf\(chistasv,"h1214"\);) N
(    sprintf\(ctext,"T_{e} = %.1f MeV",ce[14]\);) N
(  }) N
() N
(  trtheta = new TLatex\(0.50,0.80,ctext\);) N
(  trtheta->SetNDC\(\);) N
(  trtheta->SetTextSize\(0.055\);) N
() N
(  for \(int i=0; i<3; i++\) {) N
(    int ihist = i;) N
(    sprintf\(chist2,"h%d",ihist\);) N
(    int ihist = 3+i;) N
(    sprintf\(chist,"h%d",ihist\);) N
(    switch\(i\) {) N
(    case 0: hrtheta2d[i] = \(TH2D*\) f->Get\(chistg\)->Clone\(chist2\); break;) N
(    case 1: hrtheta2d[i] = \(TH2D*\) f->Get\(chista\)->Clone\(chist2\); break;) N
(    case 2: hrtheta2d[i] = \(TH2D*\) f->Get\(chistasv\)->Clone\(chist2\); break;) N
(    default: break;) N
(    }) N
(    hrtheta[i] = hrtheta2d[i]->ProjectionY\(chist,0,-1,""\);) N
(    //    hrtheta[i] = \(TH1D*\) hr->Clone\(chist\);) N
(    hrtheta[i]->GetYaxis\(\)->SetTitleOffset\(1.0\);) N
(    hrtheta[i]->GetYaxis\(\)->SetLabelSize\(0.060\);) N
(    hrtheta[i]->GetYaxis\(\)->SetLabelOffset\(0.010\);) N
(    hrtheta[i]->GetXaxis\(\)->SetLabelSize\(0.060\);) N
(aiglong4.C) (Page 2/14) (Feb 07, 15 15:04) title
border
grestore
(Printed by wjb) rhead
(aiglong4.C) (1/7) (Saturday February 07, 2015) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (3-4) 2
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.147420 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(    hrtheta[i]->GetXaxis\(\)->SetNdivisions\(505\);) p n
(    hrtheta[i]->GetXaxis\(\)->SetLabelOffset\(0.020\);) N
(    if \(i==0\) hrtheta[i]->GetYaxis\(\)->SetTitle\("gen"\);) N
(    else hrtheta[i]->GetYaxis\(\)->SetTitle\("cm^{2}-sr"\);) N
(    hrtheta[i]->GetXaxis\(\)->CenterTitle\(\);) N
(    hrtheta[i]->GetXaxis\(\)->SetTitleSize\(0.070\);) N
(    hrtheta[i]->GetXaxis\(\)->SetTitleOffset\(1.2\);) N
(    hrtheta[i]->GetXaxis\(\)->SetTitle\("#theta \(degree\)"\);) N
(    hrtheta[i]->GetYaxis\(\)->CenterTitle\(\);) N
(    hrtheta[i]->GetYaxis\(\)->SetTitleSize\(0.070\);) N
(    hrtheta[i]->GetYaxis\(\)->SetTitleOffset\(1.2\);) N
(    hrtheta[i]->SetLineColor\(kBlack\);) N
(    Double_t maxval = hrtheta[i]->GetMaximum\(\);) N
(    printf\("maxval %f\\n",1.25*maxval\);) N
(    hrtheta[i]->SetMaximum\(1.25*maxval\);) N
(  }) N
() N
(  for \(int i=1; i<3; i++\) {) N
(    int nbins = hrtheta[i]->GetNbinsX\(\);) N
(    float acc = 0;) N
(    for \(int b=1; b<=nbins; b++\)) N
(      acc+=hrtheta[i]->GetBinContent\(b\);) N
(    Double_t moyen = hrtheta[i]->GetMean\(\);) N
(    Int_t maxbin = hrtheta[i]->GetMaximumBin\(\);) N
(    Double_t pic = hrtheta[i]->GetBinCenter\(maxbin\);) N
(    Double_t rms = hrtheta[i]->GetRMS\(\);) N
(    printf\("acceptance %.1f cm2-sr moyen %.1f rms %.1f pic %1.f\\n",acc,moyen,rms) N
(,pic\);) N
(  }) N
(  ) N
(  gStyle->SetOptTitle\(0\);) N
(  gStyle->SetOptStat\(0\);) N
(  gStyle->SetCanvasColor\(10\);) N
(  gStyle->SetPadColor\(10\);) N
(  gStyle->SetPalette\(1,0\);) N
() N
(  TPad *ptpad;) N
(  char cpad[30];) N
(  TCanvas* c0 = new TCanvas\("c0","theta",0,0,600,600\);) N
(  c0->SetFillColor\(0\);) N
(  c0->Divide\(2,2,0.001,0.001\);) N
(  for \(int i=0; i<3; i++\) {) N
(    sprintf\(cpad,"c0_%d",i+1\);) N
(    ptpad = \(TPad*\) c0->FindObject\(cpad\);) N
(    ptpad->SetFillColor\(10\);) N
(    ptpad->SetLogy\(0\);) N
(    ptpad->SetLeftMargin\(0.20\);) N
(    ptpad->SetBottomMargin\(0.20\);) N
(    ptpad->SetRightMargin\(0.10\);) N
(    ptpad->SetTopMargin\(0.10\);) N
(    c0->cd\(i+1\);) N
(    printf\("c0 %d\\n",i+1\);) N
(    hrtheta[i]->Draw\("hist"\);) N
(    trtheta->Draw\(\);) N
(  }) N
() N
( ) N
(return;) N
(}) N
() N
(void rtheta_p\(float ec\) {) N
() N
(  float theERange = ec;) N
(  char chfich[100];) N
(  sprintf\(chfich,"HistProton_acc_%3.1f_MeV.root",ec\);) N
(  printf\("chfich %s\\n",chfich\);) N
(  TFile *f = new TFile\(chfich\);) N
(  f->ls\(\);) N
() N
(aiglong4.C) (Page 3/14) (Feb 07, 15 15:04) title
border
/v 1 store
/x0 x v get 3.147420 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(  char chist[60];) p n
(  char chist2[60];) N
(  char ctext[60];) N
(  float ce[11] = {30.0, 35.0, 55.0, 75.0, 100.0, 125.0, 150.0, 200.0, 225.0, 250) N
(.0, 300.0};) N
() N
(  TH2D *hrtheta2d[3];) N
(  TH1D *hproj;) N
(  TH1D *hrtheta[3];) N
(  TLatex *trtheta;  ) N
() N
(  char chistg[10];) N
(  char chista[10];) N
(  char chistasv[10];) N
() N
(  if\(theERange == 30\){) N
(    sprintf\(chistg,"h1000"\);) N
(    sprintf\(chista,"h1100"\);) N
(    sprintf\(chistasv,"h1200"\);) N
(    sprintf\(ctext,"T_{p} = %.1f MeV",ce[0]\);) N
(  }else if\(theERange == 35\){) N
(    sprintf\(chistg,"h1001"\);) N
(    sprintf\(chista,"h1101"\);) N
(    sprintf\(chistasv,"h1201"\);) N
(    sprintf\(ctext,"T_{p} = %.1f MeV",ce[1]\);) N
(  }else if\(theERange == 55\){) N
(    sprintf\(chistg,"h1002"\);) N
(    sprintf\(chista,"h1102"\);) N
(    sprintf\(chistasv,"h1202"\);) N
(    sprintf\(ctext,"T_{p} = %.1f MeV",ce[2]\);) N
(  }else if\(theERange == 75\){) N
(    sprintf\(chistg,"h1003"\);) N
(    sprintf\(chista,"h1103"\);) N
(    sprintf\(chistasv,"h1203"\);) N
(    sprintf\(ctext,"T_{p} = %.1f MeV",ce[3]\);) N
(  }else if\(theERange == 100\){) N
(    sprintf\(chistg,"h1004"\);) N
(    sprintf\(chista,"h1104"\);) N
(    sprintf\(chistasv,"h1204"\);) N
(    sprintf\(ctext,"T_{p} = %.1f MeV",ce[4]\);) N
(  }else if\(theERange == 125\){) N
(    sprintf\(chistg,"h1005"\);) N
(    sprintf\(chista,"h1105"\);) N
(    sprintf\(chistasv,"h1205"\);) N
(    sprintf\(ctext,"T_{p} = %.1f MeV",ce[5]\);) N
(  }else if\(theERange == 150\){) N
(    sprintf\(chistg,"h1006"\);) N
(    sprintf\(chista,"h1106"\);) N
(    sprintf\(chistasv,"h1206"\);) N
(    sprintf\(ctext,"T_{p} = %.1f MeV",ce[6]\);) N
(  }else if\(theERange == 200\){) N
(    sprintf\(chistg,"h1007"\);) N
(    sprintf\(chista,"h1107"\);) N
(    sprintf\(chistasv,"h1207"\);) N
(    sprintf\(ctext,"T_{p} = %.1f MeV",ce[7]\);) N
(  }else if\(theERange == 225\){) N
(    sprintf\(chistg,"h1008"\);) N
(    sprintf\(chista,"h1108"\);) N
(    sprintf\(chistasv,"h1208"\);) N
(    sprintf\(ctext,"T_{p} = %.1f MeV",ce[8]\);) N
(  }else if\(theERange == 250\){) N
(    sprintf\(chistg,"h1009"\);) N
(    sprintf\(chista,"h1109"\);) N
(    sprintf\(chistasv,"h1209"\);) N
(    sprintf\(ctext,"T_{p} = %.1f MeV",ce[9]\);) N
(  }else if\(theERange == 300\){) N
(    sprintf\(chistg,"h1010"\);) N
(    sprintf\(chista,"h1110"\);) N
(    sprintf\(chistasv,"h1210"\);) N
(aiglong4.C) (Page 4/14) (Feb 07, 15 15:04) title
border
grestore
(Printed by wjb) rhead
(aiglong4.C) (2/7) (Saturday February 07, 2015) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (5-6) 3
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.147420 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(    sprintf\(ctext,"T_{p} = %.1f MeV",ce[10]\);) p n
(  }) N
() N
(  trtheta = new TLatex\(0.50,0.80,ctext\);) N
(  trtheta->SetNDC\(\);) N
(  trtheta->SetTextSize\(0.055\);) N
() N
(  for \(int i=0; i<3; i++\) {) N
(    int ihist = i;) N
(    sprintf\(chist2,"h%d",ihist\);) N
(    int ihist = 3+i;) N
(    sprintf\(chist,"h%d",ihist\);) N
(    switch\(i\) {) N
(    case 0: hrtheta2d[i] = \(TH2D*\) f->Get\(chistg\)->Clone\(chist2\); break;) N
(    case 1: hrtheta2d[i] = \(TH2D*\) f->Get\(chista\)->Clone\(chist2\); break;) N
(    case 2: hrtheta2d[i] = \(TH2D*\) f->Get\(chistasv\)->Clone\(chist2\); break;) N
(    default: break;) N
(    }) N
(    hrtheta[i] = hrtheta2d[i]->ProjectionY\(chist,0,-1,""\);) N
(    //    hrtheta[i] = \(TH1D*\) hr->Clone\(chist\);) N
(    hrtheta[i]->GetYaxis\(\)->SetTitleOffset\(1.0\);) N
(    hrtheta[i]->GetYaxis\(\)->SetLabelSize\(0.060\);) N
(    hrtheta[i]->GetYaxis\(\)->SetLabelOffset\(0.010\);) N
(    hrtheta[i]->GetXaxis\(\)->SetLabelSize\(0.060\);) N
(    hrtheta[i]->GetXaxis\(\)->SetNdivisions\(505\);) N
(    hrtheta[i]->GetXaxis\(\)->SetLabelOffset\(0.020\);) N
(    if \(i==0\) hrtheta[i]->GetYaxis\(\)->SetTitle\("gen"\);) N
(    else hrtheta[i]->GetYaxis\(\)->SetTitle\("cm^{2}-sr"\);) N
(    hrtheta[i]->GetXaxis\(\)->CenterTitle\(\);) N
(    hrtheta[i]->GetXaxis\(\)->SetTitleSize\(0.070\);) N
(    hrtheta[i]->GetXaxis\(\)->SetTitleOffset\(1.2\);) N
(    hrtheta[i]->GetXaxis\(\)->SetTitle\("#theta \(degree\)"\);) N
(    hrtheta[i]->GetYaxis\(\)->CenterTitle\(\);) N
(    hrtheta[i]->GetYaxis\(\)->SetTitleSize\(0.070\);) N
(    hrtheta[i]->GetYaxis\(\)->SetTitleOffset\(1.2\);) N
(    hrtheta[i]->SetLineColor\(kBlack\);) N
(    Double_t maxval = hrtheta[i]->GetMaximum\(\);) N
(    printf\("maxval %f\\n",1.25*maxval\);) N
(    hrtheta[i]->SetMaximum\(1.25*maxval\);) N
(  }) N
() N
(  for \(int i=1; i<3; i++\) {) N
(    int nbins = hrtheta[i]->GetNbinsX\(\);) N
(    float acc = 0;) N
(    for \(int b=1; b<=nbins; b++\)) N
(      acc+=hrtheta[i]->GetBinContent\(b\);) N
(    Double_t moyen = hrtheta[i]->GetMean\(\);) N
(    Int_t maxbin = hrtheta[i]->GetMaximumBin\(\);) N
(    Double_t pic = hrtheta[i]->GetBinCenter\(maxbin\);) N
(    Double_t rms = hrtheta[i]->GetRMS\(\);) N
(    printf\("acceptance %.1f cm2-sr moyen %.1f rms %.1f pic %1.f\\n",acc,moyen,rms) N
(,pic\);) N
(  }) N
(  ) N
(  gStyle->SetOptTitle\(0\);) N
(  gStyle->SetOptStat\(0\);) N
(  gStyle->SetCanvasColor\(10\);) N
(  gStyle->SetPadColor\(10\);) N
(  gStyle->SetPalette\(1,0\);) N
() N
(  TPad *ptpad;) N
(  char cpad[30];) N
(  TCanvas* c0 = new TCanvas\("c0","theta",0,0,600,600\);) N
(  c0->SetFillColor\(0\);) N
(  c0->Divide\(2,2,0.001,0.001\);) N
(  for \(int i=0; i<3; i++\) {) N
(    sprintf\(cpad,"c0_%d",i+1\);) N
(    ptpad = \(TPad*\) c0->FindObject\(cpad\);) N
(    ptpad->SetFillColor\(10\);) N
(aiglong4.C) (Page 5/14) (Feb 07, 15 15:04) title
border
/v 1 store
/x0 x v get 3.147420 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(    ptpad->SetLogy\(0\);) p n
(    ptpad->SetLeftMargin\(0.20\);) N
(    ptpad->SetBottomMargin\(0.20\);) N
(    ptpad->SetRightMargin\(0.10\);) N
(    ptpad->SetTopMargin\(0.10\);) N
(    c0->cd\(i+1\);) N
(    printf\("c0 %d\\n",i+1\);) N
(    hrtheta[i]->Draw\("hist"\);) N
(    trtheta->Draw\(\);) N
(  }) N
( ) N
(return;) N
(}) N
() N
(void rtheta_e_bin\(\) {) N
() N
(  float ce[14] = {2.0, 3.0, 5.0, 10.0, 15.0, 25.0, 35.0, 45.0, 55.0, 75.0, 100.0) N
(,) N
() S 8 T () S 16 T (  125.0, 150.0, 200.0};) N
(  int plot_bin[9] = {0, 1, 2, 3, 4, 5, 7, 9, 11};  ) N
(  char cfhist[100];) N
(  char chist[10];) N
(  char chist2[10];) N
(  char ctext[100];) N
(  char chistg[10];) N
(  char chista[10];) N
(  char chistasv[10];) N
(  TFile *f[14];) N
(  TH2D *hrtheta2d[14][3];) N
(  TH1D *hproj;) N
(  TH1D *hrtheta[14][3];) N
(  float hrtheta_max[14][3];) N
(  TLatex *trtheta[14];) N
(  int hid;) N
() N
(  for \(int j=0; j<=13; j++\) {) N
(    sprintf\(cfhist,"HistElectron_acc_%3.1f_MeV.root",ce[j]\);) N
(    printf\(" %d %s\\n",j,cfhist\);) N
(    f[j] = new TFile\(cfhist\);) N
(    f[j]->ls\(\);) N
(    hid = 1000+j;) N
(    sprintf\(chistg,"h%d",hid\);) N
(    hid+=100;) N
(    sprintf\(chista,"h%d",hid\);) N
(    hid+=100;) N
(    sprintf\(chistasv,"h%d",hid\);) N
(    for \(int i=0; i<3; i++\) {) N
(      int ihist = i+j*6;) N
(      sprintf\(chist2,"h%d",ihist\);) N
(      int ihist = 3+i+j*6;) N
(      sprintf\(chist,"h%d",ihist\);) N
(      switch\(i\) {) N
(      case 0: hrtheta2d[j][i] = \(TH2D*\) f[j]->Get\(chistg\)->Clone\(chist2\); break;) N
(      case 1: hrtheta2d[j][i] = \(TH2D*\) f[j]->Get\(chista\)->Clone\(chist2\); break;) N
(      case 2: hrtheta2d[j][i] = \(TH2D*\) f[j]->Get\(chistasv\)->Clone\(chist2\); brea) N
(k;) N
(      default: break;) N
(      }) N
(      hrtheta[j][i] = hrtheta2d[j][i]->ProjectionY\(chist,0,-1,""\);) N
(    //    hrtheta[i] = \(TH1D*\) hr->Clone\(chist\);) N
(      hrtheta[j][i]->GetYaxis\(\)->SetTitleOffset\(1.0\);) N
(      hrtheta[j][i]->GetYaxis\(\)->SetLabelSize\(0.060\);) N
(      hrtheta[j][i]->GetYaxis\(\)->SetLabelOffset\(0.010\);) N
(      hrtheta[j][i]->GetXaxis\(\)->SetLabelSize\(0.060\);) N
(      hrtheta[j][i]->GetXaxis\(\)->SetNdivisions\(505\);) N
(      hrtheta[j][i]->GetXaxis\(\)->SetLabelOffset\(0.020\);) N
(      if \(i==0\) hrtheta[j][i]->GetYaxis\(\)->SetTitle\("gen"\);) N
(      else hrtheta[j][i]->GetYaxis\(\)->SetTitle\("cm^{2}-sr"\);) N
(      hrtheta[j][i]->GetXaxis\(\)->CenterTitle\(\);) N
(aiglong4.C) (Page 6/14) (Feb 07, 15 15:04) title
border
grestore
(Printed by wjb) rhead
(aiglong4.C) (3/7) (Saturday February 07, 2015) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (7-8) 4
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.147420 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(      hrtheta[j][i]->GetXaxis\(\)->SetTitleSize\(0.070\);) p n
(      hrtheta[j][i]->GetXaxis\(\)->SetTitleOffset\(1.2\);) N
(      hrtheta[j][i]->GetXaxis\(\)->SetTitle\("#theta \(degree\)"\);) N
(      hrtheta[j][i]->GetYaxis\(\)->CenterTitle\(\);) N
(      hrtheta[j][i]->GetYaxis\(\)->SetTitleSize\(0.070\);) N
(      hrtheta[j][i]->GetYaxis\(\)->SetTitleOffset\(1.2\);) N
(      hrtheta[j][i]->SetLineColor\(kBlue\);) N
(      if \(i==1 \) hrtheta[j][i]->SetLineStyle\(2\);) N
(      Double_t maxval = hrtheta[j][i]->GetMaximum\(\);) N
(      printf\("maxval %f\\n",1.25*maxval\);) N
(      hrtheta_max[j][i] = maxval;) N
(      hrtheta[j][i]->SetMaximum\(1.25*maxval\);) N
(    }) N
(    for \(int i=1; i<3; i++\) {) N
(      int nbins = hrtheta[j][i]->GetNbinsX\(\);) N
(      float acc = 0;) N
(      for \(int b=1; b<=nbins; b++\)) N
(        acc+=hrtheta[j][i]->GetBinContent\(b\);) N
(      Double_t moyen = hrtheta[j][i]->GetMean\(\);) N
(      Int_t maxbin = hrtheta[j][i]->GetMaximumBin\(\);) N
(      Double_t pic = hrtheta[j][i]->GetBinCenter\(maxbin\);) N
(      Double_t rms = hrtheta[j][i]->GetRMS\(\);) N
(      printf\("ec %f acc %.1f cm2-sr moyen %.1f rms %.1f pic %1.f\\n",ce[j],acc,mo) N
(yen,rms,pic\);) N
(    }) N
(    sprintf\(ctext,"T_{e} = %.1f MeV",ce[j]\);) N
(    trtheta[j] = new TLatex\(0.50,0.80,ctext\);) N
(    trtheta[j]->SetNDC\(\);) N
(    trtheta[j]->SetTextSize\(0.055\);) N
(  }) N
(  ) N
(  gStyle->SetOptTitle\(0\);) N
(  gStyle->SetOptStat\(0\);) N
(  gStyle->SetCanvasColor\(10\);) N
(  gStyle->SetPadColor\(10\);) N
(  gStyle->SetPalette\(1,0\);) N
() N
(  TPad *ptpad;) N
(  char cpad[30];) N
(  TCanvas* c0 = new TCanvas\("c0","theta",0,0,600,600\);) N
(  c0->SetFillColor\(0\);) N
(  c0->Divide\(3,3,0.001,0.001\);) N
(  for \(int i=0; i<9; i++\) {) N
(    sprintf\(cpad,"c0_%d",i+1\);) N
(    ptpad = \(TPad*\) c0->FindObject\(cpad\);) N
(    ptpad->SetFillColor\(10\);) N
(    ptpad->SetLogy\(0\);) N
(    ptpad->SetLeftMargin\(0.20\);) N
(    ptpad->SetBottomMargin\(0.20\);) N
(    ptpad->SetRightMargin\(0.10\);) N
(    ptpad->SetTopMargin\(0.10\);) N
(    c0->cd\(i+1\);) N
(    printf\("c0 %d\\n",i+1\);) N
(    int k = plot_bin[i];) N
(    printf\("k %d\\n",k\);) N
(    if \(hrtheta_max[k][2] > hrtheta_max[k][1]\) {) N
(      hrtheta[k][2]->Draw\(\);) N
(      hrtheta[k][1]->Draw\("samehist"\);) N
(    }) N
(    else {) N
(      hrtheta[k][1]->Draw\(\);) N
(      hrtheta[k][2]->Draw\("samehist"\);) N
(    }) N
(    trtheta[k]->Draw\(\);) N
(  }) N
() N
(  TFile *f2 = new TFile\("HistE_acc_ang_e_lyso_g3.root"\);) N
(  f2->ls\(\);) N
(  TH1D *hrtheta_g3[10];) N
(aiglong4.C) (Page 7/14) (Feb 07, 15 15:04) title
border
/v 1 store
/x0 x v get 3.147420 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
() p n
(  for \(int i=0; i<10; i++\) {) N
(    int ihist = 171 + i;) N
(      sprintf\(chist,"h%d",ihist\);) N
(      int ihist = 271 + i;) N
(      sprintf\(chist2,"h%d",ihist\);) N
(      hrtheta_g3[i] = \(TH1D*\) f2->Get\(chist\)->Clone\(chist2\); ) N
(      hrtheta_g3[i]->SetLineStyle\(2\);) N
(  }) N
() N
(  TCanvas* c1 = new TCanvas\("c1","theta g3/g4",0,0,600,600\);) N
(  c1->SetFillColor\(0\);) N
(  c1->Divide\(3,3,0.001,0.001\);) N
(  for \(int i=0; i<9; i++\) {) N
(    sprintf\(cpad,"c1_%d",i+1\);) N
(    ptpad = \(TPad*\) c1->FindObject\(cpad\);) N
(    ptpad->SetFillColor\(10\);) N
(    ptpad->SetLogy\(0\);) N
(    ptpad->SetLeftMargin\(0.20\);) N
(    ptpad->SetBottomMargin\(0.20\);) N
(    ptpad->SetRightMargin\(0.10\);) N
(    ptpad->SetTopMargin\(0.10\);) N
(    c1->cd\(i+1\);) N
(    printf\("c0 %d\\n",i+1\);) N
(    if \(i<9\) {) N
(      hrtheta[i+2][2]->Draw\(\);) N
(      hrtheta_g3[i+1]->Draw\("samehist"\);) N
(    }) N
(    else {) N
(      hrtheta_g3[i+1]->Draw\(\);) N
(      hrtheta[i+2][2]->Draw\("samehist"\);) N
(    }) N
(    trtheta[i+2]->Draw\(\);) N
(  }) N
() N
(  return;) N
(}) N
() N
(void rtheta_p_bin\(\) {) N
() N
(  float ce[11] = {30.0, 35.0, 55.0, 75.0, 100.0, 125.0, 150.0, 200.0, 225.0, 250) N
(.0, 300.0};) N
(  char cfhist[100];) N
(  char chist[10];) N
(  char chist2[10];) N
(  char ctext[100];) N
(  char chistg[10];) N
(  char chista[10];) N
(  char chistasv[10];) N
(  TFile *f[14];) N
(  TH2D *hrtheta2d[14][3];) N
(  TH1D *hproj;) N
(  TH1D *hrtheta[14][3];) N
(  float hrtheta_max[14][3];) N
(  TLatex *trtheta[14];) N
(  int hid;) N
() N
(  for \(int j=0; j<=10; j++\) {) N
(    sprintf\(cfhist,"HistProton_acc_%3.1f_MeV.root",ce[j]\);) N
(    printf\(" %d %s\\n",j,cfhist\);) N
(    f[j] = new TFile\(cfhist\);) N
(    f[j]->ls\(\);) N
(    hid = 1000+j;) N
(    sprintf\(chistg,"h%d",hid\);) N
(    hid+=100;) N
(    sprintf\(chista,"h%d",hid\);) N
(    hid+=100;) N
(    sprintf\(chistasv,"h%d",hid\);) N
(    for \(int i=0; i<3; i++\) {) N
(aiglong4.C) (Page 8/14) (Feb 07, 15 15:04) title
border
grestore
(Printed by wjb) rhead
(aiglong4.C) (4/7) (Saturday February 07, 2015) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (9-10) 5
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.147420 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(      int ihist = i+j*6;) p n
(      sprintf\(chist2,"h%d",ihist\);) N
(      int ihist = 3+i+j*6;) N
(      sprintf\(chist,"h%d",ihist\);) N
(      switch\(i\) {) N
(      case 0: hrtheta2d[j][i] = \(TH2D*\) f[j]->Get\(chistg\)->Clone\(chist2\); break;) N
(      case 1: hrtheta2d[j][i] = \(TH2D*\) f[j]->Get\(chista\)->Clone\(chist2\); break;) N
(      case 2: hrtheta2d[j][i] = \(TH2D*\) f[j]->Get\(chistasv\)->Clone\(chist2\); brea) N
(k;) N
(      default: break;) N
(      }) N
(      hrtheta[j][i] = hrtheta2d[j][i]->ProjectionY\(chist,0,-1,""\);) N
(    //    hrtheta[i] = \(TH1D*\) hr->Clone\(chist\);) N
(      hrtheta[j][i]->GetYaxis\(\)->SetTitleOffset\(1.0\);) N
(      hrtheta[j][i]->GetYaxis\(\)->SetLabelSize\(0.060\);) N
(      hrtheta[j][i]->GetYaxis\(\)->SetLabelOffset\(0.010\);) N
(      hrtheta[j][i]->GetXaxis\(\)->SetLabelSize\(0.060\);) N
(      hrtheta[j][i]->GetXaxis\(\)->SetNdivisions\(505\);) N
(      hrtheta[j][i]->GetXaxis\(\)->SetLabelOffset\(0.020\);) N
(      if \(i==0\) hrtheta[j][i]->GetYaxis\(\)->SetTitle\("gen"\);) N
(      else hrtheta[j][i]->GetYaxis\(\)->SetTitle\("cm^{2}-sr"\);) N
(      hrtheta[j][i]->GetXaxis\(\)->CenterTitle\(\);) N
(      hrtheta[j][i]->GetXaxis\(\)->SetTitleSize\(0.070\);) N
(      hrtheta[j][i]->GetXaxis\(\)->SetTitleOffset\(1.2\);) N
(      hrtheta[j][i]->GetXaxis\(\)->SetTitle\("#theta \(degree\)"\);) N
(      hrtheta[j][i]->GetYaxis\(\)->CenterTitle\(\);) N
(      hrtheta[j][i]->GetYaxis\(\)->SetTitleSize\(0.070\);) N
(      hrtheta[j][i]->GetYaxis\(\)->SetTitleOffset\(1.2\);) N
(      hrtheta[j][i]->SetLineColor\(kRed\);) N
(      if \(i==1 \) hrtheta[j][i]->SetLineStyle\(2\);) N
(      Double_t maxval = hrtheta[j][i]->GetMaximum\(\);) N
(      printf\("maxval %f\\n",1.25*maxval\);) N
(      hrtheta_max[j][i] = maxval;) N
(      hrtheta[j][i]->SetMaximum\(1.25*maxval\);) N
(    }) N
(    for \(int i=1; i<3; i++\) {) N
(      int nbins = hrtheta[j][i]->GetNbinsX\(\);) N
(      float acc = 0;) N
(      for \(int b=1; b<=nbins; b++\)) N
(        acc+=hrtheta[j][i]->GetBinContent\(b\);) N
(      Double_t moyen = hrtheta[j][i]->GetMean\(\);) N
(      Int_t maxbin = hrtheta[j][i]->GetMaximumBin\(\);) N
(      Double_t pic = hrtheta[j][i]->GetBinCenter\(maxbin\);) N
(      Double_t rms = hrtheta[j][i]->GetRMS\(\);) N
(      printf\("ec %f acc %.1f cm2-sr moyen %.1f rms %.1f pic %1.f\\n",ce[j],acc,mo) N
(yen,rms,pic\);) N
(    }) N
(    sprintf\(ctext,"T_{p} = %.1f MeV",ce[j]\);) N
(    trtheta[j] = new TLatex\(0.50,0.80,ctext\);) N
(    trtheta[j]->SetNDC\(\);) N
(    trtheta[j]->SetTextSize\(0.055\);) N
(  }) N
(  ) N
(  gStyle->SetOptTitle\(0\);) N
(  gStyle->SetOptStat\(0\);) N
(  gStyle->SetCanvasColor\(10\);) N
(  gStyle->SetPadColor\(10\);) N
(  gStyle->SetPalette\(1,0\);) N
() N
(  TPad *ptpad;) N
(  char cpad[30];) N
(  TCanvas* c0 = new TCanvas\("c0","theta",0,0,600,600\);) N
(  c0->SetFillColor\(0\);) N
(  c0->Divide\(3,3,0.001,0.001\);) N
(  for \(int i=0; i<9; i++\) {) N
(    sprintf\(cpad,"c0_%d",i+1\);) N
(    ptpad = \(TPad*\) c0->FindObject\(cpad\);) N
(    ptpad->SetFillColor\(10\);) N
(    ptpad->SetLogy\(0\);) N
(aiglong4.C) (Page 9/14) (Feb 07, 15 15:04) title
border
/v 1 store
/x0 x v get 3.147420 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(    ptpad->SetLeftMargin\(0.20\);) p n
(    ptpad->SetBottomMargin\(0.20\);) N
(    ptpad->SetRightMargin\(0.10\);) N
(    ptpad->SetTopMargin\(0.10\);) N
(    c0->cd\(i+1\);) N
(    printf\("c0 %d\\n",i+1\);) N
(    if \(hrtheta_max[i][2] > hrtheta_max[i][1]\) {) N
(      hrtheta[i][2]->Draw\(\);) N
(      hrtheta[i][1]->Draw\("samehist"\);) N
(    }) N
(    else {) N
(      hrtheta[i][1]->Draw\(\);) N
(      hrtheta[i][2]->Draw\("samehist"\);) N
(    }) N
(    trtheta[i]->Draw\(\);) N
(  }) N
() N
(  TFile *f2 = new TFile\("HistE_acc_ang_p_lyso_g3.root"\);) N
(  f2->ls\(\);) N
(  TH1D *hrtheta_g3[10];) N
() N
(  for \(int i=0; i<10; i++\) {) N
(    int ihist = 131 + i;) N
(      sprintf\(chist,"h%d",ihist\);) N
(      int ihist = 231 + i;) N
(      sprintf\(chist2,"h%d",ihist\);) N
(      hrtheta_g3[i] = \(TH1D*\) f2->Get\(chist\)->Clone\(chist2\); ) N
(      hrtheta_g3[i]->SetLineStyle\(2\);) N
(  }) N
() N
(  TCanvas* c1 = new TCanvas\("c1","theta g3/g4",0,0,600,600\);) N
(  c1->SetFillColor\(0\);) N
(  c1->Divide\(3,3,0.001,0.001\);) N
(  for \(int i=0; i<8; i++\) {) N
(    sprintf\(cpad,"c1_%d",i+1\);) N
(    ptpad = \(TPad*\) c1->FindObject\(cpad\);) N
(    ptpad->SetFillColor\(10\);) N
(    ptpad->SetLogy\(0\);) N
(    ptpad->SetLeftMargin\(0.20\);) N
(    ptpad->SetBottomMargin\(0.20\);) N
(    ptpad->SetRightMargin\(0.10\);) N
(    ptpad->SetTopMargin\(0.10\);) N
(    c1->cd\(i+1\);) N
(    printf\("c0 %d\\n",i+1\);) N
(    if \(i<9\) {) N
(      hrtheta[i][2]->Draw\(\);) N
(      hrtheta_g3[i+2]->Draw\("samehist"\);) N
(    }) N
(    else {) N
(      hrtheta_g3[i+2]->Draw\(\);) N
(      hrtheta[i][2]->Draw\("samehist"\);) N
(    }) N
(    trtheta[i]->Draw\(\);) N
(  }) N
() N
(  return;) N
(}) N
() N
(Double_t flux_norm_e = 2383.9;) N
(Double_t flux_norm_p = 1809.9;) N
(Double_t parig_e[4] = { 6.83243, 22.1979, 279.525, 1.};) N
(Double_t parig_p[4] = { 23.8664, 269.455, 109.496, 1.};) N
() N
(Double_t invgau\(Double_t *x, Double_t *par\)) N
({) N
(   Double_t arg = 0;) N
(   Double_t arg2 = 0;) N
(   //   printf\(" par %lf %lf %lf %lf\\n",par[0],par[1],par[2],par[3]\);) N
(   Double_t value = 0.;) N
(aiglong4.C) (Page 10/14) (Feb 07, 15 15:04) title
border
grestore
(Printed by wjb) rhead
(aiglong4.C) (5/7) (Saturday February 07, 2015) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (11-12) 6
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.147420 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(   //   x[0] += par[3];) p n
(   // mu - par[2], lambda - par[1]) N
(   if \(par[1]*par[2] != 0 && x[0] > 0.\) {) N
(      arg = \(x[0] - par[2]\)/par[2];) N
(      arg2 = TMath::Sqrt\(par[1]/\(2*TMath::Pi\(\)*x[0]*x[0]*x[0]\)\);) N
(      value = par[0]*arg2*TMath::Exp\(-0.5*par[1]*arg*arg/x[0]\);) N
(   }) N
(   //   printf\("arg %lf arg2 %lf\\n",arg,arg2\);) N
() N
(   //   printf\("x %lf y %lf\\n",x[0],par[3]*value\);) N
(   return\(par[3]*value\);) N
(}) N
() N
(Double_t invgau_fit\(Double_t *x, Double_t *par\)) N
({) N
(   Double_t arg = 0;) N
(   Double_t arg2 = 0;) N
(   //   printf\(" par %lf %lf %lf %lf\\n",par[0],par[1],par[2],par[3]\);) N
(   Double_t value = 0.;) N
(   //   x[0] += par[3];) N
(   // mu - par[2], lambda - par[1]) N
(   if \(par[1]*par[2] != 0 && x[0] > 0.\) {) N
(      arg = \(x[0] - par[2]\)/par[2];) N
(      arg2 = TMath::Sqrt\(par[1]/\(2*TMath::Pi\(\)*x[0]*x[0]*x[0]\)\);) N
(      value = par[0]*arg2*TMath::Exp\(-0.5*par[1]*arg*arg/x[0]\);) N
(   }) N
(   //   printf\("arg %lf arg2 %lf\\n",arg,arg2\);) N
() N
(   //   printf\("x %lf y %lf\\n",x[0],par[3]*value\);) N
(   return\(value\);) N
(}) N
() N
(void acc_ep_ccf4l4\(\) {) N
(  // MeV bin2/bin3) N
(  float ece[13] = {2.5, 5.0, 6.7, 8.4, 10.0, 15.0, 25.0, 35.0, 45.0, 55.0, 65.0,) N
( 75.0, 100.0};) N
(  // cm2-sr) N
(  float eacc_sci_cf4_l4[13] = {129.1., 321.0, 347.5, 350.9, 339.6, 285.6, 186.4,) N
( 123.0, 87.4, 68.4, 57.3, 50.0, 37.7};) N
(  // MeV bin4) N
(  float pce[10] = {22.0, 25.0, 30.0, 35.0, 55.0, 75.0, 100.0, 125.0, 150.0, 200.) N
(0};) N
(  // cm2-sr) N
(  float pacc_sci_cf4_l4[10] = {0.0, 0.0, 139.0, 250.5, 380.7, 357.4, 279.7, 200.) N
(8, 135.5, 66.3};) N
(  float x[15],y[15];) N
() N
(  TF1 *invg_e = new TF1\("invg_e",invgau,0,120,4\);) N
(  invg_e->SetLineWidth\(1\);) N
(  invg_e->SetLineColor\(kBlue\);) N
(  invg_e->SetLineStyle\(1\);) N
() N
(  TF1 *invg_p = new TF1\("invg_p",invgau,20,200,4\);) N
(  invg_p->SetLineWidth\(1\);) N
(  invg_p->SetLineColor\(kRed\);) N
(  invg_p->SetLineStyle\(1\);) N
() N
(  TF1 *invg_e_fit = new TF1\("invg_e_fit",invgau_fit,0,120,3\);) N
(  invg_e_fit->SetLineWidth\(1\);) N
(  invg_e_fit->SetLineColor\(kBlue\);) N
(  invg_e_fit->SetLineStyle\(1\);) N
() N
(  TF1 *invg_p_fit = new TF1\("invg_p_fit",invgau_fit,20,200,3\);) N
(  invg_p_fit->SetLineWidth\(1\);) N
(  invg_p_fit->SetLineColor\(kRed\);) N
(  invg_p_fit->SetLineStyle\(1\);) N
() N
(  TH1F *haccfite = new TH1F\("haccfit"," ",201,0.,210.\);) N
(  haccfite->SetMaximum\(.5\);) N
(aiglong4.C) (Page 11/14) (Feb 07, 15 15:04) title
border
/v 1 store
/x0 x v get 3.147420 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(  haccfite->SetMinimum\(0.01\);) p n
(  haccfite->GetYaxis\(\)->SetTitleOffset\(1.0\);) N
(  haccfite->GetYaxis\(\)->SetLabelSize\(0.045\);) N
(  haccfite->GetYaxis\(\)->SetLabelOffset\(0.01\);) N
(  haccfite->GetXaxis\(\)->SetLabelSize\(0.050\);) N
(  //  hacc->GetXaxis\(\)->SetNdivisions\(505\);) N
(  haccfite->GetXaxis\(\)->SetLabelOffset\(0.005\);) N
(  haccfite->GetYaxis\(\)->SetTitle\("cm^{2}-sr"\);) N
(  haccfite->GetXaxis\(\)->CenterTitle\(\);) N
(  haccfite->GetXaxis\(\)->SetTitleSize\(0.055\);) N
(  haccfite->GetXaxis\(\)->SetTitleOffset\(1.3\);) N
(  haccfite->GetXaxis\(\)->SetTitle\("Kinetic Energy \(MeV\)"\);) N
(  haccfite->GetYaxis\(\)->CenterTitle\(\);) N
(  haccfite->GetYaxis\(\)->SetTitleSize\(0.055\);) N
(  haccfite->GetYaxis\(\)->SetTitleOffset\(1.5\);) N
() N
(  Double_t tacce = 0;) N
(  Double_t taccp = 0;) N
(  for \(int i=0; i<13; i++\) {) N
(    tacce += eacc_sci_cf4_l4[i];) N
(  }) N
(  printf\("tacce %.2f \\n",tacce\);) N
(  for \(int i=0; i<10; i++\) {) N
(    taccp += pacc_sci_cf4_l4[i];) N
(  }) N
(  printf\("taccp %.2f\\n",taccp\);) N
(  parig_e[3] = tacce;) N
(  parig_p[3] = taccp;) N
(   ) N
(  int np = 0;) N
(  for \(int i=0; i<13; i++\) {) N
(    x[np] = ece[i];) N
(    y[np] = eacc_sci_cf4_l4[i]/tacce;) N
(    haccfite->Fill\(ece[i],eacc_sci_cf4_l4[i]/tacce\);) N
(    np++;) N
(  }) N
() N
(  TGraph *gacc_esci_cf4_l4_fit = new TGraph\(np,x,y\);) N
(  Double_t parig[4] = {1., 5.0, 10.0, 1.};) N
(  invg_e_fit->SetParameters\(parig\);) N
(  gacc_esci_cf4_l4_fit->Fit\("invg_e_fit","R"\);) N
() N
(  for \(int i=0; i<12; i++\) {) N
(    //    pacc_sci_cf4_l4[i] /= taccp;) N
(    //    haccfite->Fill\(pce[i],pacc_sci_cf4_l4[i]\);) N
(  }) N
( ) N
(  gStyle->SetOptTitle\(0\);) N
(  gStyle->SetOptStat\(0\);) N
(  gStyle->SetCanvasColor\(10\);) N
(  gStyle->SetPadColor\(10\);) N
(  gStyle->SetPalette\(1,0\);) N
() N
(  TPad *ptpad;) N
(  char cpad[30];) N
(  TCanvas* c0 = new TCanvas\("c0","accfite",0,0,500,500\);) N
(  c0->SetFillColor\(0\);) N
(  c0->Divide\(1,1,0.001,0.001\);) N
(  sprintf\(cpad,"c0_%d",1\);) N
(  ptpad = \(TPad*\) c0->FindObject\(cpad\);) N
(  ptpad->SetFillColor\(10\);) N
(  ptpad->SetLogy\(0\);) N
(  ptpad->SetLogx\(0\);) N
(  ptpad->SetLeftMargin\(0.20\);) N
(  ptpad->SetBottomMargin\(0.15\);) N
(  ptpad->SetRightMargin\(0.15\);) N
(  ptpad->SetTopMargin\(0.150\);) N
(  ptpad->SetTickx\(1\);) N
(  ptpad->SetTicky\(1\);) N
(aiglong4.C) (Page 12/14) (Feb 07, 15 15:04) title
border
grestore
(Printed by wjb) rhead
(aiglong4.C) (6/7) (Saturday February 07, 2015) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (13-14) 7
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.147420 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(  c0->cd\(1\);) p n
(  haccfite->Draw\(\);) N
(  //  invg_e_fit->Draw\("same"\);) N
(  ) N
(  //  return;   ) N
(  int np = 0;) N
(  for \(int i=0; i<13; i++\) {) N
(    x[np] = ece[i];) N
(    y[np] = eacc_sci_cf4_l4[i];) N
(    np++;) N
(  }) N
() N
(  TGraph *gacc_esci_cf4_l4 = new TGraph\(np,x,y\);) N
(  gacc_esci_cf4_l4->SetMarkerStyle\(20\);) N
(  gacc_esci_cf4_l4->SetMarkerColor\(kBlue\);) N
(  gacc_esci_cf4_l4->SetMarkerSize\(0.8\);) N
(  gacc_esci_cf4_l4->SetLineWidth\(1\);) N
(  gacc_esci_cf4_l4->SetLineStyle\(1\);) N
(  gacc_esci_cf4_l4->SetLineColor\(kBlue\);) N
(  Double_t parig[4] = {1., 2.0, 2.0, 1.};) N
(  invg_e_fit->SetParameters\(parig\);) N
(  //  gacc_esci_cf4_l4->Fit\("invg_e_fit","R"\);) N
() N
(  np = 0;) N
(  for \(int i=0; i<10; i++\) {) N
(    if \(pacc_sci_cf4_l4[i] > 0.\) {) N
(    x[np] = pce[i];) N
(    y[np] = pacc_sci_cf4_l4[i];) N
(    np++;) N
(    }) N
(  }) N
() N
(  TGraph *gacc_psci_cf4_l4 = new TGraph\(np,x,y\);) N
(  gacc_psci_cf4_l4->SetMarkerStyle\(20\);) N
(  gacc_psci_cf4_l4->SetMarkerColor\(kRed\);) N
(  gacc_psci_cf4_l4->SetMarkerSize\(0.8\);) N
(  gacc_psci_cf4_l4->SetLineWidth\(2\);) N
(  gacc_psci_cf4_l4->SetLineStyle\(2\);) N
(  gacc_psci_cf4_l4->SetLineColor\(kRed\);) N
(  Double_t parig[4] = {1., 5.0, 60.0, 1.0};) N
(  //  invg_p->SetParameters\(parig\);) N
(  //  gacc_psci_cf4_l4->Fit\("invg_p","R"\);) N
() N
(  //  return;) N
() N
(  TH1F *hacc = new TH1F\("hacc"," ",50,1.0,1000.\);) N
(  hacc->SetMaximum\(450.0\);) N
(  hacc->SetMinimum\(0.0\);) N
(  hacc->GetYaxis\(\)->SetTitleOffset\(1.0\);) N
(  hacc->GetYaxis\(\)->SetLabelSize\(0.045\);) N
(  hacc->GetYaxis\(\)->SetLabelOffset\(0.01\);) N
(  hacc->GetXaxis\(\)->SetLabelSize\(0.050\);) N
(  //  hacc->GetXaxis\(\)->SetNdivisions\(505\);) N
(  hacc->GetXaxis\(\)->SetLabelOffset\(0.005\);) N
(  hacc->GetYaxis\(\)->SetTitle\("cm^{2}-sr"\);) N
(  hacc->GetXaxis\(\)->CenterTitle\(\);) N
(  hacc->GetXaxis\(\)->SetTitleSize\(0.055\);) N
(  hacc->GetXaxis\(\)->SetTitleOffset\(1.3\);) N
(  hacc->GetXaxis\(\)->SetTitle\("Kinetic Energy \(MeV\)"\);) N
(  hacc->GetYaxis\(\)->CenterTitle\(\);) N
(  hacc->GetYaxis\(\)->SetTitleSize\(0.055\);) N
(  hacc->GetYaxis\(\)->SetTitleOffset\(1.5\);) N
(  ) N
(  TCanvas* c2 = new TCanvas\("c2","acc",0,0,500,500\);) N
(  c2->SetFillColor\(0\);) N
(  c2->Divide\(1,1,0.001,0.001\);) N
(  sprintf\(cpad,"c2_%d",1\);) N
(  ptpad = \(TPad*\) c2->FindObject\(cpad\);) N
(  ptpad->SetFillColor\(10\);) N
(aiglong4.C) (Page 13/14) (Feb 07, 15 15:04) title
border
/v 1 store
/x0 x v get 3.147420 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(  ptpad->SetLogy\(0\);) p n
(  ptpad->SetLogx\(1\);) N
(  ptpad->SetLeftMargin\(0.20\);) N
(  ptpad->SetBottomMargin\(0.15\);) N
(  ptpad->SetRightMargin\(0.15\);) N
(  ptpad->SetTopMargin\(0.150\);) N
(  ptpad->SetTickx\(1\);) N
(  ptpad->SetTicky\(1\);) N
(  c2->cd\(1\);) N
(  hacc->Draw\(\);) N
(  gacc_esci_cf4_l4->Draw\("P"\);) N
(  gacc_psci_cf4_l4->Draw\("P"\);) N
(  invg_e->SetRange\(2.5,100.\);) N
(  invg_e->SetParameters\(parig_e\);) N
(  invg_e->Draw\("same"\);) N
(  invg_p->SetRange\(28.,200.\);) N
(  invg_p->SetParameters\(parig_p\);) N
(  invg_p->Draw\("same"\);) N
() N
(  TLatex *te = new TLatex\(0.275,0.760,"electrons"\);) N
(  te->SetNDC\(\);) N
(  te->SetTextColor\(kBlue\);) N
(  te->SetTextSize\(0.04\);) N
(  te->Draw\(\); ) N
() N
(  TLatex *tp = new TLatex\(0.65,0.755,"protons"\);) N
(  tp->SetNDC\(\);) N
(  tp->SetTextColor\(kRed\);) N
(  tp->SetTextSize\(0.04\);) N
(  tp->Draw\(\); ) N
() N
(  x[0] = 2.;) N
(  y[0] = 38.;) N
(  x[1] = 3.5;) N
(  y[1] = 38.; ) N
(  TLine *lcf1 = new TLine\(x[0],y[0],x[1],y[1]\);) N
(  lcf1->SetLineWidth\(2\);) N
(  lcf1->SetLineStyle\(1\);) N
(  lcf1->SetLineColor\(kBlack\);) N
(  //  lcf1->Draw\(\);) N
() N
(  TLatex *tcf1 = new TLatex\(0.34,0.242,"with LYSO"\);) N
(  tcf1->SetNDC\(\);) N
(  tcf1->SetTextSize\(0.035\);) N
(  //  tcf1->Draw\(\);) N
() N
(  y[0] = 66.;) N
(  y[1] = 66.; ) N
(  TLine *lcf2 = new TLine\(x[0],y[0],x[1],y[1]\);) N
(  lcf2->SetLineWidth\(2\);) N
(  lcf2->SetLineStyle\(2\);) N
(  lcf2->SetLineColor\(kBlack\);) N
(  //  lcf2->Draw\(\);) N
() N
(  TLatex *tcf2 = new TLatex\(0.34,0.202,"without LYSO"\);) N
(  tcf2->SetNDC\(\);) N
(  tcf2->SetTextSize\(0.035\);) N
(  //  tcf2->Draw\(\);) N
() N
(  return;) N
(}) N
(aiglong4.C) (Page 14/14) (Feb 07, 15 15:04) title
border
grestore
(Printed by wjb) rhead
(aiglong4.C) (7/7) (Saturday February 07, 2015) footer
end % of iso1dict
pagesave restore
showpage

%%Trailer
end
%%EOF
