%!PS-Adobe-3.0
%%Title: Analyzer.C
%%For: wjb
%%Creator: a2ps version 4.14
%%CreationDate: Mon Jan 19 15:05:48 2015
%%BoundingBox: 24 24 588 768
%%DocumentData: Clean7Bit
%%Orientation: Landscape
%%Pages: 4
%%PageOrder: Ascend
%%DocumentMedia: Letter 612 792 0 () ()
%%DocumentNeededResources: font Courier
%%+ font Courier-Bold
%%+ font Courier-BoldOblique
%%+ font Courier-Oblique
%%+ font Helvetica
%%+ font Helvetica-Bold
%%+ font Symbol
%%+ font Times-Bold
%%+ font Times-Roman
%%DocumentProcessColors: Black 
%%DocumentSuppliedResources: procset a2ps-a2ps-hdr
%%+ procset a2ps-black+white-Prolog
%%+ encoding ISO-8859-1Encoding
%%EndComments
/a2psdict 200 dict def
a2psdict begin
%%BeginProlog
%%Copyright: (c) 1988, 89, 90, 91, 92, 93 Miguel Santana
%%Copyright: (c) 1995, 96, 97, 98 Akim Demaille, Miguel Santana
% Check PostScript language level.
/languagelevel where {
  pop /gs_languagelevel languagelevel def
} {
  /gs_languagelevel 1 def
} ifelse

% EPSF import as in the Red Book
/BeginInclude {
  /b4_Inc_state save def    		% Save state for cleanup
  /dict_count countdictstack def	% Count objects on dict stack
  /op_count count 1 sub def		% Count objects on operand stack 
  userdict begin
    0 setgray 0 setlinecap
    1 setlinewidth 0 setlinejoin
    10 setmiterlimit [ ] 0 setdash newpath
    gs_languagelevel 1 ne {
      false setstrokeadjust false setoverprint 
    } if
} bind def

/EndInclude {
  count op_count sub { pos } repeat	% Clean up stacks
  countdictstack dict_count sub { end } repeat
  b4_Inc_state restore
} bind def

/BeginEPSF {
  BeginInclude
  /showpage { } def
} bind def

/EndEPSF {
  EndInclude
} bind def

% Page prefeed
/page_prefeed {         % bool -> -
  statusdict /prefeed known {
    statusdict exch /prefeed exch put
  } {
    pop
  } ifelse
} bind def

/deffont {
  findfont exch scalefont def
} bind def

/reencode_font {
  findfont reencode 2 copy definefont pop def
} bind def

% Function c-show (str => -)
% centers text only according to x axis.
/c-show { 
  dup stringwidth pop
  2 div neg 0 rmoveto
  show
} bind def

% Function l-show (str => -)
% prints texts so that it ends at currentpoint
/l-show {
  dup stringwidth pop neg 
  0 
  rmoveto show
} bind def

% center-fit show (str w => -)
% show centered, and scale currentfont so that the width is less than w
/cfshow {
  exch dup stringwidth pop
  % If the title is too big, try to make it smaller
  3 2 roll 2 copy
  gt
  { % if, i.e. too big
    exch div
    currentfont exch scalefont setfont
  } { % ifelse
    pop pop 
  }
  ifelse
  c-show			% center title
} bind def

% Return the y size of the current font
% - => fontsize
/currentfontsize {
  currentfont /FontType get 0 eq {
    currentfont /FontMatrix get 3 get
  }{
    currentfont /FontMatrix get 3 get 1000 mul
  } ifelse
} bind def

% reencode the font
% <encoding-vector> <fontdict> -> <newfontdict>
/reencode { %def
  dup length 5 add dict begin
    { %forall
      % <vector> <key> <val>
      1 index /FID ne 
      { def }{ pop pop } ifelse
    } forall
    /Encoding exch def % -

    % Use the font's bounding box to determine the ascent, descent,
    % and overall height; don't forget that these values have to be
    % transformed using the font's matrix.
    % We use `load' because sometimes BBox is executable, sometimes not.
    % Since we need 4 numbers an not an array avoid BBox from being executed
    /FontBBox load aload pop
    FontMatrix transform /Ascent exch def pop
    FontMatrix transform /Descent exch def pop
    /FontHeight Ascent Descent sub def

    % Get the underline position and thickness if they're defined.
    % Use 1 if they are not defined.
    currentdict /FontInfo 2 copy known
    { get
      /UnderlinePosition 2 copy % <FontInfo> /UP <FontInfo> /UP
      2 copy known
      { get }{ pop pop 1 } ifelse
      0 exch FontMatrix transform exch pop
      def % <FontInfo>

      /UnderlineThickness 2 copy % <FontInfo> /UT <FontInfo> /UT
      2 copy known
      { get }{ pop pop 1 } ifelse
      0 exch FontMatrix transform exch pop
      def % <FontInfo>
      pop % -
    }{ pop pop
    } ifelse

    currentdict
  end 
} bind def

% composite fonts for ASCII-EUC mixed string
% Version 1.2 1/31/1990
% Orignal Ken'ichi HANDA (handa@etl.go.jp)
% Modified Norio Katayama (katayama@rd.nacsis.ac.jp),1998
% Extend & Fix Koji Nakamaru (maru@on.cs.keio.ac.jp), 1999
% Anyone can freely copy, modify, distribute this program.

/copyfont {	% font-dic extra-entry-count  copyfont  font-dic
	1 index maxlength add dict begin
	{	1 index /FID ne 2 index /UniqueID ne and
		{def} {pop pop} ifelse
	} forall
	currentdict
	end
} bind def

/compositefont { % ASCIIFontName EUCFontName RomanScale RomanOffset Rot(T/F) compositefont font
    /RomanRotation exch def
    /RomanOffset exch def
    /RomanScale exch def
    userdict /fixeucfont_dict known not {
	userdict begin
	    /fixeucfont_dict 2 dict begin
		/UpperByteEncoding [
		    16#00 1 16#20 { pop 0 } for
		    16#21 1 16#28 { 16#20 sub } for
		    16#29 1 16#2F { pop 0 } for
		    16#30 1 16#74 { 16#27 sub } for
		    16#75 1 16#FF { pop 0 } for
		] def
	        /LowerByteEncoding [
		    16#00 1 16#A0 { pop /.notdef } for
		    16#A1 1 16#FE { 16#80 sub 16 2 string cvrs
				    (cXX) dup 1 4 -1 roll
				    putinterval cvn } for
		    /.notdef
		] def
		currentdict
	    end def
	end
    } if
    findfont dup /FontType get 0 eq {
	14 dict begin
	    %
	    % 7+8 bit EUC font
	    %
	    12 dict begin
		/EUCFont exch def
		/FontInfo (7+8 bit EUC font) readonly def
		/PaintType 0 def
		/FontType 0 def
		/FontMatrix matrix def
		% /FontName
		/Encoding fixeucfont_dict /UpperByteEncoding get def
		/FMapType 2 def
		EUCFont /WMode known
		{ EUCFont /WMode get /WMode exch def }
		{ /WMode 0 def } ifelse
		/FDepVector [
		    EUCFont /FDepVector get 0 get
		    [ 16#21 1 16#28 {} for 16#30 1 16#74 {} for ]
		    {
			13 dict begin
			    /EUCFont EUCFont def
			    /UpperByte exch 16#80 add def	
			    % /FontName
			    /FontInfo (EUC lower byte font) readonly def
			    /PaintType 0 def
			    /FontType 3 def
			    /FontMatrix matrix def
			    /FontBBox {0 0 0 0} def
			    /Encoding
				fixeucfont_dict /LowerByteEncoding get def
			    % /UniqueID
			    % /WMode
			    /BuildChar {
				gsave
				exch dup /EUCFont get setfont
				/UpperByte get
				2 string
				dup 0 4 -1 roll put
				dup 1 4 -1 roll put
				dup stringwidth setcharwidth
				0 0 moveto show
				grestore
			    } bind def
			    currentdict
			end
			/lowerbytefont exch definefont
		    } forall
		] def
		currentdict
	    end
	    /eucfont exch definefont
	    exch
	    findfont 1 copyfont dup begin
		RomanRotation {
			/FontMatrix FontMatrix
			[ 0 RomanScale neg RomanScale 0 RomanOffset neg 0 ]
			matrix concatmatrix def
		}{
			/FontMatrix FontMatrix
			[ RomanScale 0 0 RomanScale 0 RomanOffset ] matrix concatmatrix
			def
			/CDevProc
			    {pop pop pop pop 0 exch -1000 exch 2 div 880} def
		} ifelse
	    end
	    /asciifont exch definefont
	    exch
	    /FDepVector [ 4 2 roll ] def
	    /FontType 0 def
	    /WMode 0 def
	    /FMapType 4 def
	    /FontMatrix matrix def
	    /Encoding [0 1] def
	    /FontBBox {0 0 0 0} def
%	    /FontHeight 1.0 def % XXXX
	    /FontHeight RomanScale 1.0 ge { RomanScale }{ 1.0 } ifelse def
	    /Descent -0.3 def   % XXXX
	    currentdict
	end
	/tmpfont exch definefont
	pop
	/tmpfont findfont
    }{
	pop findfont 0 copyfont
    } ifelse
} def	

/slantfont {	% FontName slant-degree  slantfont  font'
    exch findfont 1 copyfont begin
    [ 1 0 4 -1 roll 1 0 0 ] FontMatrix exch matrix concatmatrix
    /FontMatrix exch def
    currentdict
    end
} def

% Function print line number (<string> # -)
/# {
  gsave
    sx cw mul neg 2 div 0 rmoveto
    f# setfont
    c-show
  grestore
} bind def

% -------- Some routines to enlight plain b/w printings ---------

% Underline
% width --
/dounderline {
  currentpoint
  gsave
    moveto
    0 currentfont /Descent get currentfontsize mul rmoveto
    0 rlineto
    stroke
  grestore
} bind def

% Underline a string
% string --
/dounderlinestring {
  stringwidth pop
  dounderline
} bind def

/UL {
  /ul exch store
} bind def

% Draw a box of WIDTH wrt current font
% width --
/dobox {
  currentpoint
  gsave
    newpath
    moveto
    0 currentfont /Descent get currentfontsize mul rmoveto
    dup 0 rlineto
    0 currentfont /FontHeight get currentfontsize mul rlineto
    neg 0 rlineto
    closepath
    stroke
  grestore
} bind def

/BX {
  /bx exch store
} bind def

% Box a string
% string --
/doboxstring {
  stringwidth pop
  dobox
} bind def

%
% ------------- Color routines ---------------
%
/FG /setrgbcolor load def

% Draw the background
% width --
/dobackground {
  currentpoint
  gsave
    newpath
    moveto
    0 currentfont /Descent get currentfontsize mul rmoveto
    dup 0 rlineto
    0 currentfont /FontHeight get currentfontsize mul rlineto
    neg 0 rlineto
    closepath
    bgcolor aload pop setrgbcolor
    fill
  grestore
} bind def

% Draw bg for a string
% string --
/dobackgroundstring {
  stringwidth pop
  dobackground
} bind def


/BG {
  dup /bg exch store
  { mark 4 1 roll ] /bgcolor exch store } if
} bind def


/Show {
  bg { dup dobackgroundstring } if
  ul { dup dounderlinestring } if
  bx { dup doboxstring } if
  show
} bind def

% Function T(ab), jumps to the n-th tabulation in the current line
/T {
  cw mul x0 add
  bg { dup currentpoint pop sub dobackground } if
  ul { dup currentpoint pop sub dounderline } if
  bx { dup currentpoint pop sub dobox } if
  y0 moveto
} bind def

% Function n: move to the next line
/n {
  /y0 y0 bfs sub store
  x0 y0 moveto
} bind def

% Function N: show and move to the next line
/N {
  Show
  /y0 y0 bfs sub store
  x0 y0 moveto
} bind def

/S {
  Show
} bind def

%%BeginResource: procset a2ps-a2ps-hdr 2.0 2
%%Copyright: (c) 1988, 89, 90, 91, 92, 93 Miguel Santana
%%Copyright: (c) 1995, 96, 97, 98 Akim Demaille, Miguel Santana
% Function title: prints page header.
% <ct> <rt> <lt> are passed as argument
/title { 
  % 1. Draw the background
  x v get y v get moveto
  gsave
    0 th 2 div neg rmoveto 
    th setlinewidth
    0.95 setgray
    pw 0 rlineto stroke
  grestore
  % 2. Border it
  gsave
    0.7 setlinewidth
    pw 0 rlineto
    0 th neg rlineto
    pw neg 0 rlineto
    closepath stroke
  grestore
  % stk: ct rt lt
  x v get y v get th sub 1 add moveto
%%IncludeResource: font Helvetica
  fHelvetica fnfs 0.8 mul scalefont setfont
  % 3. The left title
  gsave
    dup stringwidth pop fnfs 0.8 mul add exch % leave space took on stack
    fnfs 0.8 mul hm rmoveto
    show			% left title
  grestore
  exch
  % stk: ct ltw rt
  % 4. the right title
  gsave
    dup stringwidth pop fnfs 0.8 mul add exch % leave space took on stack
    dup
    pw exch stringwidth pop fnfs 0.8 mul add sub
    hm
    rmoveto
    show			% right title
  grestore
  % stk: ct ltw rtw
  % 5. the center title
  gsave
    pw 3 1 roll
    % stk: ct pw ltw rtw
    3 copy 
    % Move to the center of the left room
    sub add 2 div hm rmoveto
    % What is the available space in here?
    add sub fnfs 0.8 mul sub fnfs 0.8 mul sub
    % stk: ct space_left
%%IncludeResource: font Helvetica-Bold
  fHelvetica-Bold fnfs scalefont setfont
    cfshow
  grestore
} bind def

% Function border: prints virtual page border
/border { %def
  gsave				% print four sides
    0 setgray
    x v get y v get moveto
    0.7 setlinewidth		% of the square
    pw 0 rlineto
    0 ph neg rlineto
    pw neg 0 rlineto
    closepath stroke
  grestore
} bind def

% Function water: prints a water mark in background
/water { %def
  gsave
    scx scy moveto rotate
%%IncludeResource: font Times-Bold
  fTimes-Bold 100 scalefont setfont
    .97 setgray
    dup stringwidth pop 2 div neg -50 rmoveto
    show
  grestore
} bind def

% Function rhead: prints the right header
/rhead {  %def
  lx ly moveto
  fHelvetica fnfs 0.8 mul scalefont setfont
  l-show
} bind def

% Function footer (cf rf lf -> -)
/footer {
  fHelvetica fnfs 0.8 mul scalefont setfont
  dx dy moveto
  show

  snx sny moveto
  l-show
  
  fnx fny moveto
  c-show
} bind def
%%EndResource
%%BeginResource: procset a2ps-black+white-Prolog 2.0 1

% Function T(ab), jumps to the n-th tabulation in the current line
/T { 
  cw mul x0 add y0 moveto
} bind def

% Function n: move to the next line
/n { %def
  /y0 y0 bfs sub store
  x0 y0 moveto
} bind def

% Function N: show and move to the next line
/N {
  Show
  /y0 y0 bfs sub store
  x0 y0 moveto
}  bind def

/S {
  Show
} bind def

/p {
  false UL
  false BX
  fCourier bfs scalefont setfont
  Show
} bind def

/sy {
  false UL
  false BX
  fSymbol bfs scalefont setfont
  Show
} bind def

/k {
  false UL
  false BX
  fCourier-Oblique bfs scalefont setfont
  Show
} bind def

/K {
  false UL
  false BX
  fCourier-Bold bfs scalefont setfont
  Show
} bind def

/c {
  false UL
  false BX
  fCourier-Oblique bfs scalefont setfont
  Show
} bind def

/C {
  false UL
  false BX
  fCourier-BoldOblique bfs scalefont setfont
  Show 
} bind def

/l {
  false UL
  false BX
  fHelvetica bfs scalefont setfont
  Show
} bind def

/L {
  false UL
  false BX
  fHelvetica-Bold bfs scalefont setfont
  Show 
} bind def

/str{
  false UL
  false BX
  fTimes-Roman bfs scalefont setfont
  Show
} bind def

/e{
  false UL
  true BX
  fHelvetica-Bold bfs scalefont setfont
  Show
} bind def

%%EndResource
%%EndProlog
%%BeginSetup
%%IncludeResource: font Courier
%%IncludeResource: font Courier-Oblique
%%IncludeResource: font Courier-Bold
%%IncludeResource: font Times-Roman
%%IncludeResource: font Symbol
%%IncludeResource: font Courier-BoldOblique
%%BeginResource: encoding ISO-8859-1Encoding
/ISO-8859-1Encoding [
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/space /exclam /quotedbl /numbersign /dollar /percent /ampersand /quoteright 
/parenleft /parenright /asterisk /plus /comma /minus /period /slash 
/zero /one /two /three /four /five /six /seven 
/eight /nine /colon /semicolon /less /equal /greater /question 
/at /A /B /C /D /E /F /G 
/H /I /J /K /L /M /N /O 
/P /Q /R /S /T /U /V /W 
/X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore 
/quoteleft /a /b /c /d /e /f /g 
/h /i /j /k /l /m /n /o 
/p /q /r /s /t /u /v /w 
/x /y /z /braceleft /bar /braceright /asciitilde /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/space /exclamdown /cent /sterling /currency /yen /brokenbar /section 
/dieresis /copyright /ordfeminine /guillemotleft /logicalnot /hyphen /registered /macron 
/degree /plusminus /twosuperior /threesuperior /acute /mu /paragraph /bullet 
/cedilla /onesuperior /ordmasculine /guillemotright /onequarter /onehalf /threequarters /questiondown 
/Agrave /Aacute /Acircumflex /Atilde /Adieresis /Aring /AE /Ccedilla 
/Egrave /Eacute /Ecircumflex /Edieresis /Igrave /Iacute /Icircumflex /Idieresis 
/Eth /Ntilde /Ograve /Oacute /Ocircumflex /Otilde /Odieresis /multiply 
/Oslash /Ugrave /Uacute /Ucircumflex /Udieresis /Yacute /Thorn /germandbls 
/agrave /aacute /acircumflex /atilde /adieresis /aring /ae /ccedilla 
/egrave /eacute /ecircumflex /edieresis /igrave /iacute /icircumflex /idieresis 
/eth /ntilde /ograve /oacute /ocircumflex /otilde /odieresis /divide 
/oslash /ugrave /uacute /ucircumflex /udieresis /yacute /thorn /ydieresis 
] def
%%EndResource
% Initialize page description variables.
/sh 612 def
/sw 792 def
/llx 24 def
/urx 768 def
/ury 588 def
/lly 24 def
/#copies 1 def
/th 15.000000 def
/fnfs 11 def
/bfs 7.493857 def
/cw 4.496314 def

% Dictionary for ISO-8859-1 support
/iso1dict 8 dict begin
  /fCourier ISO-8859-1Encoding /Courier reencode_font
  /fCourier-Bold ISO-8859-1Encoding /Courier-Bold reencode_font
  /fCourier-BoldOblique ISO-8859-1Encoding /Courier-BoldOblique reencode_font
  /fCourier-Oblique ISO-8859-1Encoding /Courier-Oblique reencode_font
  /fHelvetica ISO-8859-1Encoding /Helvetica reencode_font
  /fHelvetica-Bold ISO-8859-1Encoding /Helvetica-Bold reencode_font
  /fTimes-Bold ISO-8859-1Encoding /Times-Bold reencode_font
  /fTimes-Roman ISO-8859-1Encoding /Times-Roman reencode_font
currentdict end def
/bgcolor [ 0 0 0 ] def
/bg false def
/ul false def
/bx false def
% The font for line numbering
/f# /Helvetica findfont bfs .6 mul scalefont def
/fSymbol /Symbol findfont def
/hm fnfs 0.25 mul def
/pw
   cw 81.400000 mul
def
/ph
   522.321860 th add
def
/pmw urx llx sub pw 2 mul sub 1 div def
/pmh 0 def
/v 0 def
/x [
  0
  dup pmw add pw add
] def
/y [
  pmh ph add 0 mul ph add
  dup
] def
/scx sw 2 div def
/scy sh 2 div def
/snx urx def
/sny lly 2 add def
/dx llx def
/dy sny def
/fnx scx def
/fny dy def
/lx snx def
/ly ury fnfs 0.8 mul sub def
/sx 0 def
/tab 8 def
/x0 0 def
/y0 0 def
%%EndSetup

%%Page: (1-2) 1
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.147420 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(#define Analyzer_cxx) p n
(#include "Analyzer.h") N
(#include <TH2.h>) N
(#include <TGraph.h>) N
(#include <TGraphAsymmErrors.h>) N
(#include <TMultiGraph.h>) N
(#include <TStyle.h>) N
(#include <TCanvas.h>) N
(#include <TPaveText.h>) N
(#include <TLegend.h>) N
(#include <iostream>) N
(#include <TRandom.h>) N
(#include <TMath.h>) N
(#include <iostream>) N
( ) N
() N
(void Analyzer::InitHisto\(\){) N
(  layerDepthElectron = new TProfile\("layerDepthElectron","Calo Layer Depth",250,) N
(0,250,0,24\);  ) N
(  layerDepthProton = new TProfile\("layerDepthProton","Calo Layer Depth",250,0,25) N
(0,0,24\);  ) N
(  ) N
(  energyAVGRangeElectron = new TProfile\("energyAVGRangeElectron","Energy ratio b) N
(etween LYSO and SCINT\(AVG\)",300,0,300,0,15\);) N
(  energySUMRangeElectron = new TProfile\("energySUMRangeElectron","Energy ratio b) N
(etween LYSO and SCINT\(SUM\)",300,0,300,0,15\);) N
() N
(  energyAVGRangeProton = new TProfile\("energyAVGRangeProton","Energy ratio betwe) N
(en LYSO and SCINT\(AVG\)",300,0,300,0,15\);) N
(  energySUMRangeProton = new TProfile\("energySUMRangeProton","Energy ratio betwe) N
(en LYSO and SCINT\(SUM\)",300,0,300,0,15\);) N
() N
(  Ecinetique_gen = new TH1F\("hecgen","Distribution Ek generated",1000,0,200\);) N
(  Ecinetique_acc_trk = new TH1F\("hecacctrk","Distribution Ek accepteed trk",1000) N
(,0,200\);) N
(  Ecinetique_acc_sci = new TH1F\("hecaccaco","Distribution Ek accepteed sci",1000) N
(,0,200\);) N
(  Ecinetique_acc_veto = new TH1F\("hecaccvetp","Distribution Ek accepteed veto",1) N
(000,0,200\);) N
() N
(}) N
() N
(void Analyzer::CloseHisto\(\){) N
(  ) N
(  TCanvas* c1f = new TCanvas\("c1f","",200,10,700,500\);) N
(  gStyle->SetOptStat\(0\);) N
(  layerDepthElectron->SetMarkerColor\(kBlue\);) N
(  layerDepthElectron->SetMarkerStyle\(22\);) N
(  layerDepthElectron->SetMarkerSize\(2\);) N
(  layerDepthElectron->GetXaxis\(\)->SetTitle\("Energy [MeV]"\);) N
(  layerDepthElectron->GetXaxis\(\)->CenterTitle\(true\);) N
(  layerDepthElectron->GetXaxis\(\)->SetTitleSize\(0.05\);) N
(  layerDepthElectron->GetXaxis\(\)->SetTitleOffset\(0.90\);) N
(  layerDepthElectron->GetXaxis\(\)->SetLabelSize\(0.05\);) N
(  layerDepthElectron->GetYaxis\(\)->SetTitle\("<#> Layer"\);  ) N
(  layerDepthElectron->GetYaxis\(\)->CenterTitle\(true\);) N
(  layerDepthElectron->GetYaxis\(\)->SetTitleSize\(0.05\);) N
(  layerDepthElectron->GetYaxis\(\)->SetTitleOffset\(0.90\);) N
(  layerDepthElectron->GetYaxis\(\)->SetLabelSize\(0.05\);) N
() N
(  layerDepthProton->SetMarkerColor\(kRed\);) N
(  layerDepthProton->SetMarkerStyle\(23\);) N
(  layerDepthProton->SetMarkerSize\(2\);) N
(  layerDepthProton->GetXaxis\(\)->SetTitle\("Energy [MeV]"\);) N
(  layerDepthProton->GetXaxis\(\)->CenterTitle\(true\);) N
(  layerDepthProton->GetXaxis\(\)->SetTitleSize\(0.05\);) N
(  layerDepthProton->GetXaxis\(\)->SetTitleOffset\(0.90\);) N
(  layerDepthProton->GetXaxis\(\)->SetLabelSize\(0.05\);) N
(  layerDepthProton->GetYaxis\(\)->SetTitle\("<#> Layer"\);  ) N
(Analyzer.C) (Page 1/8) (Jan 19, 15 14:55) title
border
/v 1 store
/x0 x v get 3.147420 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(  layerDepthProton->GetYaxis\(\)->CenterTitle\(true\);) p n
(  layerDepthProton->GetYaxis\(\)->SetTitleSize\(0.05\);) N
(  layerDepthProton->GetYaxis\(\)->SetTitleOffset\(0.90\);) N
(  layerDepthProton->GetYaxis\(\)->SetLabelSize\(0.05\);) N
() N
(  if\(layerDepthElectron->GetBinContent\(layerDepthElectron->GetMaximumBin\(\)\)>laye) N
(rDepthProton->GetBinContent\(layerDepthProton->GetMaximumBin\(\)\)\){) N
(    layerDepthElectron->Draw\(\);) N
(    layerDepthProton->Draw\("same"\);) N
(  }else{) N
(    layerDepthProton->Draw\(\);) N
(    layerDepthElectron->Draw\("same"\);) N
(  }) N
() N
(  //  c1f->SaveAs\("LayerDepth.eps"\);) N
() N
(  TCanvas* c2f = new TCanvas\("c2f","",200,10,700,500\);) N
(  gStyle->SetOptStat\(0\);  ) N
(  ) N
(  energyAVGRangeElectron->SetMarkerColor\(kBlue\);) N
(  energyAVGRangeElectron->SetMarkerStyle\(22\);) N
(  energyAVGRangeElectron->SetMarkerSize\(1\);) N
(  energyAVGRangeElectron->SetTitle\(""\);) N
(  energyAVGRangeElectron->GetXaxis\(\)->SetTitle\("Energy [MeV]"\);) N
(  energyAVGRangeElectron->GetYaxis\(\)->SetTitle\("E_{Rec LYSO}/<E_{Rec SCINT}>"\); ) N
(  energyAVGRangeElectron->SetLineColor\(kBlue\);) N
(  ) N
(  energyAVGRangeElectron->Draw\("BOX"\);) N
() N
(  //  c2f->SaveAs\("Figure/TestE_AVG.eps"\);) N
() N
(  TCanvas* c3f = new TCanvas\("c3f","",200,10,700,500\);) N
(  gStyle->SetOptStat\(0\);) N
(  energySUMRangeElectron->SetMarkerColor\(kBlue\);) N
(  energySUMRangeElectron->SetMarkerStyle\(22\);) N
(  energyAVGRangeElectron->SetMarkerSize\(1\);) N
(  energySUMRangeElectron->SetTitle\(""\);) N
(  energySUMRangeElectron->GetXaxis\(\)->SetTitle\("Energy [MeV]"\);) N
(  energySUMRangeElectron->GetYaxis\(\)->SetTitle\("E_{Rec LYSO}/#Sigma E_{Rec SCINT) N
(}"\); ) N
(  energySUMRangeElectron->SetLineColor\(kBlue\);) N
(  ) N
(  energySUMRangeElectron->Draw\("BOX"\);) N
() N
(  //  c3f->SaveAs\("Figure/TestE_SUM.eps"\);) N
(  ) N
(  TCanvas* c4f = new TCanvas\("c4f","",200,10,700,500\);) N
(  gStyle->SetOptStat\(0\);) N
(  energyAVGRangeProton->SetMarkerColor\(kRed\);) N
(  energyAVGRangeProton->SetMarkerStyle\(22\);) N
(  energyAVGRangeProton->SetMarkerSize\(1\);) N
(  energyAVGRangeProton->SetTitle\(""\);) N
(  energyAVGRangeProton->GetXaxis\(\)->SetTitle\("Energy [MeV]"\);) N
(  energyAVGRangeProton->GetYaxis\(\)->SetTitle\("E_{Rec LYSO}/<E_{Rec SCINT}>"\); ) N
(  energyAVGRangeProton->SetLineColor\(kRed\);) N
(  ) N
(  energyAVGRangeProton->Draw\("BOX"\);) N
() N
(  //  c4f->SaveAs\("Figure/TestP_AVG.eps"\);) N
() N
(  TCanvas* c5f = new TCanvas\("c5f","",200,10,700,500\);) N
(  gStyle->SetOptStat\(0\);) N
(  energySUMRangeProton->SetMarkerColor\(kRed\);) N
(  energySUMRangeProton->SetMarkerStyle\(22\);) N
(  energySUMRangeProton->SetMarkerSize\(1\);) N
(  energySUMRangeProton->SetTitle\(""\);) N
(  energySUMRangeProton->GetXaxis\(\)->SetTitle\("Energy [MeV]"\);) N
(  energySUMRangeProton->GetYaxis\(\)->SetTitle\("E_{Rec LYSO}/#Sigma E_{Rec SCINT}") N
(\); ) N
(Analyzer.C) (Page 2/8) (Jan 19, 15 14:55) title
border
grestore
(Printed by wjb) rhead
(Analyzer.C) (1/4) (Monday January 19, 2015) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (3-4) 2
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.147420 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(  energySUMRangeProton->SetLineColor\(kRed\);) p n
(  ) N
(  energySUMRangeProton->Draw\("BOX"\);) N
() N
(  gStyle->SetOptTitle\(0\);) N
(  gStyle->SetOptStat\(0\);) N
(  gStyle->SetCanvasColor\(10\);) N
(  gStyle->SetPadColor\(10\);) N
(  gStyle->SetPalette\(1,0\);) N
(  gStyle->SetFrameFillColor\(kWhite\);) N
() N
(  char cpad[80];) N
(  TPad* ptpad;) N
(  ) N
(  TCanvas* c1 = new TCanvas\("c1","ec gen electron",0,0,500,500\);) N
(  c1->SetFillColor\(0\);) N
(  c1->Divide\(2,2,0.001,0.001\);) N
(  for \(int i=0; i<4; i++\) {) N
(    sprintf\(cpad,"c1_%d",i+1\);) N
(    ptpad = \(TPad*\) c1->FindObject\(cpad\);) N
(    ptpad->SetFillColor\(10\);) N
(    ptpad->SetLogy\(1\);) N
(    ptpad->SetLogx\(0\);) N
(    ptpad->SetLeftMargin\(0.15\);) N
(    ptpad->SetBottomMargin\(0.15\);) N
(    ptpad->SetRightMargin\(0.125\);) N
(    ptpad->SetTopMargin\(0.125\);) N
(    c1->cd\(i+1\);) N
(    switch\(i\) {) N
(    case 0: Ecinetique_gen->Draw\(\); break;) N
(    case 1: Ecinetique_acc_trk->Draw\(\); break;) N
(    case 2: Ecinetique_acc_sci->Draw\(\); break;) N
(    case 3: Ecinetique_acc_veto->Draw\(\); break;) N
(    default: break;) N
(    }) N
(  }) N
() N
(  ) N
(}) N
() N
(void Analyzer::Loop\(\)) N
({) N
() N
(  //  double Energy = E;) N
(  int bufsize = 80000000;) N
(    ) N
(  printf\("get entries\\n"\);) N
(  Long64_t nentries = fTreeChain->GetEntriesFast\(\);) N
(  printf\("get entries\\n"\);) N
(  Long64_t nbytes = 0, nb = 0;) N
(  Double_t maxLayer = 0;) N
() N
(  printf\("nentries %d\\n",nentries\);) N
(  //  for \(Long64_t jentry=0; jentry<50000;jentry++\) {) N
(  for \(Long64_t jentry=0; jentry<nentries;jentry++\) {) N
( ) N
(    bool s1Hit=false;) N
(    bool s2Hit=false;) N
(    bool noVetoHit=false;) N
(    bool hitOnTkLayer1=false;) N
(    bool hitOnTkLayer2=false;) N
(    bool goodHit=false;) N
(    maxLayer=0;) N
(    Long64_t ientry = LoadTree\(jentry\);) N
(    if \(ientry < 0\) break;) N
(    nb = fTreeChain->GetEntry\(jentry\);   nbytes += nb;) N
(    std::vector<RootTrack> myTracks = Event->GetTracks\(\);) N
(    std::vector<RootCaloHit> myCaloHit = Event->GetCaloHit\(\);) N
(    std::vector<RootCaloHit> myVetoHit = Event->GetVetoHit\(\);) N
(Analyzer.C) (Page 3/8) (Jan 19, 15 14:55) title
border
/v 1 store
/x0 x v get 3.147420 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(    std::vector<RootTrackerHit> myTrackerHit = Event->GetTrackerHit\(\);) p n
() N
(    TVector3 electronDir = myTracks[0].GetDirection\(\);) N
(    TVector3 position = myTracks[0].GetPosition\(\);) N
(    float theta = electronDir.Theta\(\)*180/TMath::Pi\(\);) N
(    if\(theta>90\)) N
(      theta=180-theta;) N
(    float ce = myTracks[0].GetKinEnergy\(\);) N
(    Ecinetique_gen->Fill\(ce\);) N
() S 8 T (if\(myTrackerHit.size\(\)>0\){) N
() S 8 T (  //          printf\("trk no hits %d\\n",myTrackerHit.size\(\)\);) N
() S 8 T (  for\(size_t th=0;th<myTrackerHit.size\(\);th++\){) N
() S 8 T (    int detId = myTrackerHit[th].GetDetectorId\(\);) N
(            int tkid = myTrackerHit[th].GetTrackId\(\);) N
() S 8 T (    //            printf\("tk hit %d det id %d\\n",th,detId\); ) N
() S 8 T (    if\(detId>2200 && tkid==1\) {) N
() S 8 T (      hitOnTkLayer1=true;) N
() S 8 T (      //              printf\("hit layer 1\\n",th\);) N
(            }) N
() S 8 T (    else if\(detId>2100 && tkid==1\) {) N
() S 8 T (      hitOnTkLayer2=true;) N
() S 8 T (      //              printf\("hit layer 2\\n",th\);) N
(            }) N
() S 8 T (  }) N
() S 8 T (  if\(hitOnTkLayer2&&hitOnTkLayer1\) {) N
() S 8 T (           Ecinetique_acc_trk->Fill\(ce\);) N
() S 8 T () S 16 T (   printf\("no tracker hits 2\\n",ce\);) N
() S 8 T (  //          printf\("\\n"\);) N
(          }) N
() S 8 T (}) N
(    hitOnTkLayer1=false;) N
(    hitOnTkLayer2=false;) N
(    if\(myCaloHit.size\(\)>0\){) N
(      if \(ce > 10\) {) N
() S 8 T (//         printf\("pdg %d x %f y %f z %f\\n",myTracks[0].GetPDG\(\),positio) N
(n.X\(\),position.Y\(\),position.Z\(\)\);) N
() S 8 T (//         printf\("ientry %d energie %10.3e\\n",ientry,ce\);) N
(      }) N
(      //    printf\("Calo hit size %d\\n",myCaloHit.size\(\)\);) N
(      for\(size_t sh=0;sh<myCaloHit.size\(\);sh++\){) N
() S 8 T (int scintLayer = myCaloHit[sh].GetVolume\(\);) N
() S 8 T (//        printf\("scintlayer %d\\n",scintLayer\);) N
() S 8 T (std::vector<int> plist = myCaloHit[sh].GetParticleList\(\);       ) N
() S 8 T (//f or\(size_t p=0;p<plist.size\(\);p++\)) N
() S 8 T (//) S 16 T (  printf\("pid %d PDG %d\\n",plist[p],myTracks[plist[p]].GetPDG\(\)\)) N
(;) N
() S 8 T (//) S 16 T (if\(scintLayer.Contains\("S1"\)\)) N
(        if \(myCaloHit.size\(\)>=2 && ce <= 15\)) N
() S 8 T (printf\("scintLayer %d\\n",scintLayer\);) N
() S 8 T (if \(scintLayer >= 1300 && plist[0]==1\) s1Hit=true;) N
(        if \(scintLayer == 1216 && plist[0]==1\) s2Hit=true;) N
(      }) N
(      printf\("\\n"\);) N
(      if\(s1Hit&&s2Hit\){) N
(        Ecinetique_acc_sci->Fill\(ce\);) N
() S 8 T (if\(myVetoHit.size\(\)==0\){) N
() S 8 T (  noVetoHit=true;) N
(          Ecinetique_acc_veto->Fill\(ce\);) N
() S 8 T (}) N
() S 8 T (if\(myTrackerHit.size\(\)>0&&noVetoHit\){) N
() S 8 T (  for\(size_t th=0;th<myTrackerHit.size\(\);th++\){) N
() S 8 T (    int detId = myTrackerHit[th].GetDetectorId\(\);) N
(            int tkid = myTrackerHit[th].GetTrackId\(\);) N
() S 8 T (    if\(detId>2200 && tkid==1\) {) N
() S 8 T (      hitOnTkLayer1=true;) N
() S 8 T (      //              printf\("hit layer 1\\n",th\);) N
(            }) N
() S 8 T (    else if\(detId>2100 && tkid==1\) {) N
() S 8 T (      hitOnTkLayer2=true;) N
(Analyzer.C) (Page 4/8) (Jan 19, 15 14:55) title
border
grestore
(Printed by wjb) rhead
(Analyzer.C) (2/4) (Monday January 19, 2015) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (5-6) 3
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.147420 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
() p 8 T (      //              printf\("hit layer 2\\n",th\);) N
(            }) N
() S 8 T (  }) N
() S 8 T (  if\(hitOnTkLayer2&&hitOnTkLayer1\)) N
() S 8 T (    goodHit=true;) N
() S 8 T (}) N
(      }) N
(    }) N
(    ) N
(    /*    if\(checkPos&&goodHit\){) N
(      for\(size_t j=0;j<myTracks.size\(\);j++\){) N
() S 8 T (if\(myTracks[j].GetTrackID\(\)==1\){) N
() S 8 T (  Double_t Xpos =std::fabs\(myTracks[j].GetPosition\(\).X\(\)\);) N
() S 8 T (  Double_t Ypos =std::fabs\(myTracks[j].GetPosition\(\).Y\(\)\);) N
() S 8 T (  if\(Xpos>Xlimit&&Ypos>Ylimit\)) N
() S 8 T (    goodHit=false;) N
() S 8 T (}) N
(      }) N
(    } ) N
(    if\(checkTheta&&goodHit\){) N
(      Double_t myThetaWithSmearing = ComputeAngleWithSmearing\(myTrackerHit,0.05\)) N
(*180/TMath::Pi\(\);) N
(      if\(myThetaWithSmearing>Thetalimit\)) N
() S 8 T (goodHit=false;) N
() S 8 T (} */) N
() N
(    /*    if\(goodHit\){) N
(      Double_t myTheta = ComputeAngle\(myTrackerHit\)*180/TMath::Pi\(\);) N
(      Double_t myThetaWithSmearing = ComputeAngleWithSmearing\(myTrackerHit,0.05\)) N
(*180/TMath::Pi\(\);) N
(      ) N
(      Double_t trackTheta=0;) N
(      for\(size_t j=0;j<myTracks.size\(\);j++\){) N
() S 8 T (if\(myTracks[j].GetTrackID\(\)==1\)) N
() S 8 T (  trackTheta=myTracks[j].GetDirection\(\).Theta\(\)*180/TMath::Pi\(\);) N
(      }) N
(      if\(trackTheta>90\)) N
() S 8 T (trackTheta=180-trackTheta;) N
(      ) N
(      float totalEdep   = 0;) N
(      float totalEnoS1  = 0;) N
(      float scintS1Edep = 0;) N
(      float scintS2Edep = 0;) N
(      float scintEdep   = 0;) N
(      float caloEdep    = 0;) N
(      float siliconEdep = 0;) N
(      for\(size_t i=0;i<myTrackerHit.size\(\);i++\){) N
() S 8 T (siliconEdep+=myTrackerHit[i].GetELoss\(\);) N
() S 8 T (totalEdep+=myTrackerHit[i].GetELoss\(\);) N
() S 8 T (totalEnoS1+=myTrackerHit[i].GetELoss\(\);) N
() S 8 T (int detId = myTrackerHit[i].GetDetectorId\(\);) N
() S 8 T (/*) S 16 T (if\(detId>200\)) N
() S 8 T (  layerDepElectron->Fill\(1,myTrackerHit[i].GetELoss\(\)\);) N
() S 8 T (if\(detId<200\)) N
() S 8 T (layerDepElectron->Fill\(2,myTrackerHit[i].GetELoss\(\)\);  */) N
(    //      }) N
(      //      siliconEdepHisto->Fill\(siliconEdep\);) N
(  /*      for\(size_t i=0;i<myCaloHit.size\(\);i++\){) N
() S 8 T (scintEdep+=myCaloHit[i].GetTotalEdep\(\);) N
() S 8 T (totalEdep+=myCaloHit[i].GetTotalEdep\(\);) N
() S 8 T (TString volume = myCaloHit[i].GetVolume\(\);) N
() S 8 T (if\(volume.Contains\("S1"\)\){) N
() S 8 T (  scintS1Edep+=myCaloHit[i].GetTotalEdep\(\);) N
() S 8 T (  //) S 16 T (  layerDepElectron->Fill\(3,myCaloHit[i].GetTotalEdep\(\)\);) N
() S 8 T (}) N
() S 8 T (else if\(volume.Contains\("S2"\)\){) N
() S 8 T (  scintS2Edep+=myCaloHit[i].GetTotalEdep\(\);) N
() S 8 T (  totalEnoS1+=myCaloHit[i].GetTotalEdep\(\);) N
() S 8 T (  //) S 16 T (  layerDepElectron->Fill\(4,myCaloHit[i].GetTotalEdep\(\)\);) N
(Analyzer.C) (Page 5/8) (Jan 19, 15 14:55) title
border
/v 1 store
/x0 x v get 3.147420 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
() p 8 T (}) N
(      }) N
(      //      scintS1EdepHisto->Fill\(scintS1Edep\);) N
(      //      scintS2EdepHisto->Fill\(scintS2Edep\);) N
(      //      scintEdepHisto->Fill\(scintEdep\);) N
(      if\(myCaloHit.size\(\)\){) N
() S 8 T (float E_Rec_Scint=0;) N
() S 8 T (float E_Rec_LYSO=0;) N
() S 8 T (int hittedBricks=0;) N
() S 8 T (float eDep = 0;) N
() S 8 T (float bricksEDep[9];) N
() S 8 T (for\(int i =0;i<9;i++\)) N
() S 8 T (  bricksEDep[i] = 0;) N
() S 8 T (for\(size_t i=0;i<myCaloHit.size\(\);i++\){) N
() S 8 T (  eDep = myCaloHit[i].GetTotalEdep\(\);;) N
() S 8 T (  caloEdep+=eDep;) N
() S 8 T (  totalEdep+=eDep;) N
() S 8 T (  totalEnoS1+=eDep;) N
() S 8 T (  TString layer = myCaloHit[i].GetVolume\(\);) N
() S 8 T (  int layernumb;) N
() S 8 T (  if\(numbLayerCrystal==-1&&layer.Contains\("ActiveBlockCrystal"\)\){) N
() S 8 T (    layernumb = numbLayerScint+1;) N
() S 8 T (    hittedBricks++;) N
() S 8 T (    layer.Remove\(0,18\);) N
() S 8 T (    bricksEDep[layer.Atoi\(\)]+=eDep;) N
() S 8 T (  }else if\(layer.Contains\("ActiveLayerCrystal"\)\){) N
() S 8 T (    layer.Remove\(0,18\);) N
() S 8 T (    layernumb = numbLayerScint+numbLayerCrystal-layer.Atoi\(\);) N
() S 8 T (  }else if\(layer.Contains\("ActiveLayerScint"\)\){) N
() S 8 T (    layer.Remove\(0,16\);) N
() S 8 T (    layernumb = numbLayerScint-layer.Atoi\(\);) N
() S 8 T (  }else{ ) N
() S 8 T (    layer.Remove\(0,11\);) N
() S 8 T (    layernumb = numbCaloLayer-layer.Atoi\(\);) N
() S 8 T (  }) N
() S 8 T (  if\(maxLayer<layernumb\)) N
() S 8 T (    maxLayer=layernumb;) N
() S 8 T (  //) S 16 T (  layerDepElectron->Fill\(layernumb+4,eDep\);) N
() S 8 T (  if\(layernumb== numbLayerScint+1\)) N
() S 8 T (    E_Rec_LYSO+=eDep;) N
() S 8 T (  else) N
() S 8 T (    E_Rec_Scint+=eDep;) N
() S 8 T (}) N
() S 8 T (float lysoDep=0;) N
() S 8 T (for\(int i = 0;i<9;i++\){) N
() S 8 T (  if\(bricksEDep[i]!=0\){) N
() S 8 T (    lysoDep+=bricksEDep[i];) N
() S 8 T (    //) S 16 T (    singlebrickDep->Fill\(bricksEDep[i]\);) S 64 T () N
() S 8 T (  }) N
() S 8 T (  //) S 16 T (  if\(lysoDep!=0&&i==8\)) N
() S 8 T (  //  allbricksDep->Fill\(lysoDep\);) N
() S 8 T (}) N
() S 8 T (//) S 16 T (bricksHitted->Fill\(hittedBricks\);) N
() S 8 T (//      ) S 24 T (caloEdepHisto->Fill\(caloEdep\);) N
() S 8 T (//) S 16 T (layerDepthElectron->Fill\(theERange,maxLayer\);) N
() S 8 T (//) S 16 T (energyAVGRangeElectron->Fill\(theERange,E_Rec_LYSO/\(E_Rec_Scint/n) N
(umbLayerScint\)\);) N
() S 8 T (//) S 16 T (energySUMRangeElectron->Fill\(theERange,E_Rec_LYSO/E_Rec_Scint\);) N
(      }) N
() N
(      //      totalEdepHistoNoS1NoCut->Fill\(totalEnoS1\);) N
(      //      totalEdepHistoNoCut->Fill\(totalEdep\);) N
(      ) N
(      /*      if\(totalEnoS1>2.5\)) N
() S 8 T (totalEdepHistoNoS1->Fill\(totalEnoS1\);) N
(      if\(totalEnoS1>1.5\)) N
() S 8 T (totalEdepHistoNoS1Cut2->Fill\(totalEnoS1\);) N
(      if\(totalEdep>=2.5\){) N
() S 8 T (totalEdepHisto->Fill\(totalEdep\);) N
(Analyzer.C) (Page 6/8) (Jan 19, 15 14:55) title
border
grestore
(Printed by wjb) rhead
(Analyzer.C) (3/4) (Monday January 19, 2015) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (7-8) 4
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.147420 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
() p 8 T (energyVSangle->Fill\(myThetaWithSmearing,totalEdep/theERange\);) N
() S 8 T (} ) N
(    } */) N
(    ) N
(  }) N
(}) N
() N
(void Analyzer::SetAcceptanceWindows\(Double_t X,Double_t Y\){) N
(  checkPos=true;) N
(  Xlimit=X/2.;) N
(  Ylimit=Y/2.;) N
(}) N
() N
(void Analyzer::SetThetaAcceptance\(Double_t aTheta\){) N
(  checkTheta=true;) N
(  Thetalimit=aTheta;) N
(}) N
() N
(Double_t Analyzer::ComputeAngle\(std::vector<RootTrackerHit>& myTrackerHit\){) N
() N
(  std::vector<RootTrackerHit> layer2Hit;) N
(  std::vector<RootTrackerHit> layer1Hit;) N
(  ) N
(  for\(size_t th=0;th<myTrackerHit.size\(\);th++\){) N
(    int detId = myTrackerHit[th].GetDetectorId\(\);) N
(    if\(detId>200\)) N
(      layer2Hit.push_back\(myTrackerHit[th]\);) N
(    if\(detId<200\)) N
(      layer1Hit.push_back\(myTrackerHit[th]\);) N
(  }) N
(  ) N
(  TVector3 posL2;) N
(  TVector3 posL1;) N
() N
(  if\(layer2Hit.size\(\)==1\){) N
(    posL2 = \(layer2Hit[0].GetEntryPoint\(\)+layer2Hit[0].GetExitPoint\(\)\)*0.5;) N
(  }else{) N
(    for\(size_t j= 0;j<layer2Hit.size\(\);j++\){) N
(      if\(layer2Hit[j].GetTrackId\(\)==1\)) N
() S 8 T (posL2 = \(layer2Hit[j].GetEntryPoint\(\)+layer2Hit[j].GetExitPoint\(\)\)*0.5;) N
(    }) N
(  }) N
(  if\(layer1Hit.size\(\)==1\){) N
(    posL1 = \(layer1Hit[0].GetEntryPoint\(\)+layer1Hit[0].GetExitPoint\(\)\)*0.5;) N
(  }else{) N
(    for\(size_t j= 0;j<layer2Hit.size\(\);j++\){) N
(      if\(layer1Hit[j].GetTrackId\(\)==1\)) N
() S 8 T (posL1 = \(layer1Hit[j].GetEntryPoint\(\)+layer1Hit[j].GetExitPoint\(\)\)*0.5;) N
(    }) N
(  }) N
() N
(  TVector3 segment = posL2-posL1;) N
() N
(  return segment.Theta\(\);) N
(}) N
() N
(Double_t Analyzer::ComputeAngleWithSmearing\(std::vector<RootTrackerHit>& myTrack) N
(erHit,Double_t delta\){) N
() N
(  std::vector<RootTrackerHit> layer2Hit;) N
(  std::vector<RootTrackerHit> layer1Hit;) N
(  ) N
(  for\(size_t th=0;th<myTrackerHit.size\(\);th++\){) N
(    int detId = myTrackerHit[th].GetDetectorId\(\);) N
(    if\(detId>200\)) N
(      layer2Hit.push_back\(myTrackerHit[th]\);) N
(    if\(detId<200\)) N
(      layer1Hit.push_back\(myTrackerHit[th]\);) N
(  }) N
(Analyzer.C) (Page 7/8) (Jan 19, 15 14:55) title
border
/v 1 store
/x0 x v get 3.147420 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(  ) p n
(  TVector3 posL2;) N
(  TVector3 posL1;) N
() N
(  if\(layer2Hit.size\(\)==1\){) N
(    posL2 = \(layer2Hit[0].GetEntryPoint\(\)+layer2Hit[0].GetExitPoint\(\)\)*0.5;) N
(  }else{) N
(    for\(size_t j= 0;j<layer2Hit.size\(\);j++\){) N
(      if\(layer2Hit[j].GetTrackId\(\)==1\)) N
() S 8 T (posL2 = \(layer2Hit[j].GetEntryPoint\(\)+layer2Hit[j].GetExitPoint\(\)\)*0.5;) N
(    }) N
(  }) N
(  if\(layer1Hit.size\(\)==1\){) N
(    posL1 = \(layer1Hit[0].GetEntryPoint\(\)+layer1Hit[0].GetExitPoint\(\)\)*0.5;) N
(  }else{    ) N
(    for\(size_t j= 0;j<layer2Hit.size\(\);j++\){) N
(      if\(layer1Hit[j].GetTrackId\(\)==1\)) N
() S 8 T (posL1 = \(layer1Hit[j].GetEntryPoint\(\)+layer1Hit[j].GetExitPoint\(\)\)*0.5;) N
(    }) N
(  }) N
() N
(  TRandom myRand;) N
() N
(  Double_t xL1 = posL1.X\(\)+myRand.Uniform\(-delta,delta\);) N
(  Double_t yL1 = posL1.Y\(\)+myRand.Uniform\(-delta,delta\);) N
() N
(  posL1.SetX\(xL1\);) N
(  posL1.SetY\(yL1\);) N
() N
(  Double_t xL2 = posL2.X\(\)+myRand.Uniform\(-delta,delta\);) N
(  Double_t yL2 = posL2.Y\(\)+myRand.Uniform\(-delta,delta\);) N
() N
(  posL2.SetX\(xL2\);) N
(  posL2.SetY\(yL2\);) N
() N
(  TVector3 segment = posL2-posL1;) N
() N
(  return segment.Theta\(\);) N
(}) N
(Analyzer.C) (Page 8/8) (Jan 19, 15 14:55) title
border
grestore
(Printed by wjb) rhead
(Analyzer.C) (4/4) (Monday January 19, 2015) footer
end % of iso1dict
pagesave restore
showpage

%%Trailer
end
%%EOF
