/*
 * ecaladc.cc
 *
 *
 *
 */


#include "ecaladc.hh"
#include "TVector3.h"
#include "TVector2.h"
#include <iostream>
#include <algorithm> // find_if




float Vector3Dist (TVector3 v1, TVector3 v2)
{
    TVector3 diff = v1 - v2;
    return static_cast<float> (diff.Mag() ); // get magnitude (=rho=Sqrt(x*x+y*y+z*z)))
}


float VectorXYDist (TVector3 v1, TVector3 v2)
{
    v2.SetZ (v1.Z() );
    return Vector3Dist (v1, v2);
}



EcalADC::EcalADC() {
    initHGaggregate();
    initLGaggregate();
    initScint();
    initMCpos();
    initMCshape();
}


void EcalADC::initScint()
{
    const std::array<float, NSCINTPLANES> MeVPeakLayer = {
        5.19256, 5.31434, 5.43623, 5.56329, 5.71436, 5.89574, 6.07625, 6.29347,
        6.53174, 6.80163, 7.13162, 7.51907, 8.00189, 8.59306, 9.37135, 10.4922
    };
    const std::map<PMTenum, int> PMT2Layer;
    const std::array <PMTenum, 32 > scintPMT = {P1se, P2sw, P3se, P4sw, P5se, P6sw, P7se, P8sw,
                                    P9se, P10sw, P11se, P12sw, P13se, P14sw, P15se, P16sw,
                                    P1nw, P2ne, P3nw, P4ne, P5nw, P6ne, P7nw, P8ne,
                                    P9nw, P10ne, P11nw, P12ne, P13nw, P14ne, P15nw, P16ne
                                   };
    for (uint iPMT=0; iPMT<scintPMT.size(); iPMT++) {
        uint layer= iPMT % scintPMT.size()/2;
        float peak=MeVPeakLayer[layer];
        PMTenum idx=scintPMT[iPMT];
        hgPMT[idx].layerScint=layer;
        hgPMT[idx].scintMeVPeak=peak;
        lgPMT[idx].layerScint=layer;
        lgPMT[idx].scintMeVPeak=peak;

    }
    return;
}


void EcalADC::initMCpos() {
    const std::array<float, NSCINTPLANES> PMTzMC={312.2,297.42,282.64,267.86,253.08,238.3,223.52,208.74,193.96,179.18,
        164.814,150.51,136.241,121.944,107.659,93.3685};
   for (int i=0; i<NPMT; i++) {
      float x=(i%2 == 0)?82.5:-82.5; //mm
      float y=(i < NPMT/2)?82.5:-82.5; //mm
      MCtoPhysicalDetectorFrame mcVector(TVector3(x, y, PMTzMC[i]));
      hgPMT[i].physPosition=mcVector.GetPhysicalVector();
      lgPMT[i].physPosition=mcVector.GetPhysicalVector();
   }
   return;
}


void EcalADC::SetPositions(std::vector<Edep_Pos> pmt_info) {
    for (int ip = 0; ip < NPMT; ip++) {
        correctedPMTs[ip] = pmt_info[ip].totEdep;
        TVector3 PMTpos = hgPMT[ip].physPosition;
        TVector3 ParticlePos = pmt_info[ip].position;
        float distance = VectorXYDist (PMTpos, ParticlePos);
        float attcor = PMTAttCorr (distance);
        correctedPMTs[ip] *= attcor;
    }
}

void EcalADC::NormalizePMThg ( ushort* pmt_high)
{
    NormalizePMT(pmt_high, hgPMT);
    return;
}

void EcalADC::NormalizePMTlg ( ushort* pmt_low)
{
    NormalizePMT(pmt_low, lgPMT);
    return;
}


void EcalADC::NormalizePMT ( ushort* pmt_out, PMTarray pmtDB) {
    for (uint ip = 0; ip < NPMT; ip++) {
        float MeVToADC = EcalMev2ADCfactor (PMTiterator[ip], pmtDB);
        float centeredADC=correctedPMTs[ip] * MeVToADC;
        float shapedADC=applyMCshaping(centeredADC, PMTiterator[ip]);
        if (shapedADC<=0) shapedADC=centeredADC; // Remove line if we want 0 (layer not hit)
        int untrimmedPMT = static_cast<int> (shapedADC) + pmtDB[ip].pedMean;
        if (untrimmedPMT > NADC) untrimmedPMT = NADC - 1;
        pmt_out[ip] = static_cast<short> (untrimmedPMT);
    }
    return;
}





float EcalADC::EcalMev2ADCfactor (PMTenum PMT, PMTarray pmtDB)
{
    float MaxMeV = pmtDB[PMT].isScint? pmtDB[PMT].scintMeVPeak:15;
    float absMaxADC = pmtDB[PMT].maxPeak;
    float ped = pmtDB[PMT].pedMean;
    float relMaxADC = absMaxADC - ped;
    float MeV2ADC = relMaxADC / MaxMeV;
    return MeV2ADC;
}



float EcalADC::PMTAttCorr (float dist)
{
    float lambda = 2764.; //mm
    return exp (- dist / lambda);
}


std::pair<float, float> EcalADC::getFitCoeff(PMTenum pmt) {
        std::pair <float, float> fitPair={0, 0};
// See        https://stackoverflow.com/questions/14225932/search-for-a-struct-item-in-a-vector-by-member-data
   auto predicate=[&](LinearFitParam& f) {return (f.energy == mcEnergy) && (f.index==pmt);};
   auto iter = std::find_if(std::begin(linearFitParams), std::end(linearFitParams), predicate);
   if (iter != linearFitParams.end() )
        fitPair={iter[0].a, iter[0].b};
   return fitPair;
}


float EcalADC::applyMCshaping(float ADCval, PMTenum pmt) {
   std::pair<float, float> fitPar=getFitCoeff(pmt);
   return fitPar.first * ADCval+ fitPar.second;
}






void EcalADC::initHGaggregate () {
    TVector3 test= {0, 0, 0};
   hgPMT = {{
        {T1e  , "T1e"  ,  412.881081 ,  5.093883 ,   472.881081 , 0    , 0, 0, {0, 0, 0}},
        {T2e  , "T2e"  ,  414.176163 ,  4.326234 ,  1020.807331 , 0    , 0, 0, {0, 0, 0}},
        {T3e  , "T3e"  ,  415.425746 ,  4.121837 ,   541.034929 , 0    , 0, 0, {0, 0, 0}},
        {T4e  , "T4e"  ,  407.145891 ,  4.621238 ,   575.252082 , 0    , 0, 0, {0, 0, 0}},
        {T5e  , "T5e"  ,  425.449938 ,  6.050231 ,   550.449938 , 0    , 0, 0, {0, 0, 0}},
        {T6e  , "T6e"  ,  428.115108 ,  4.650233 ,   511.366271 , 0    , 0, 0, {0, 0, 0}},
        {P1se , "P1se" ,  430.355283 , 16.186345 ,   720.355283 , true , 0, 0, {0, 0, 0}},
        {P2sw , "P2sw" ,  417.464629 ,  6.610456 ,   707.464629 , true , 0, 0, {0, 0, 0}},
        {P3se , "P3se" ,  412.608072 ,  9.512528 ,   832.608072 , true , 0, 0, {0, 0, 0}},
        {P4sw , "P4sw" ,  430.881204 ,  6.871393 ,   915.881204 , true , 0, 0, {0, 0, 0}},
        {P5se , "P5se" ,  428.139805 ,  5.186284 ,   458.139805 , true , 0, 0, {0, 0, 0}},
        {P6sw , "P6sw" ,  416.522330 ,  5.849863 ,   646.522330 , true , 0, 0, {0, 0, 0}},
        {P7se , "P7se" ,  409.647628 ,  5.147244 ,   954.647628 , true , 0, 0, {0, 0, 0}},
        {P8sw , "P8sw" ,  410.832036 ,  6.252032 ,   870.832036 , true , 0, 0, {0, 0, 0}},
        {P9se , "P9se" ,  418.328410 ,  6.430319 ,   708.328410 , true , 0, 0, {0, 0, 0}},
        {P10sw, "P10sw",  423.420672 ,  6.879046 ,   833.420672 , true , 0, 0, {0, 0, 0}},
        {P11se, "P11se",  430.422299 ,  7.082736 ,   865.422299 , true , 0, 0, {0, 0, 0}},
        {P12sw, "P12sw",  438.338769 ,  6.347400 ,   893.338769 , true , 0, 0, {0, 0, 0}},
        {P13se, "P13se",  421.560884 ,  6.770046 ,  1056.560884 , true , 0, 0, {0, 0, 0}},
        {P14sw, "P14sw",  423.465648 ,  9.530436 ,  1108.465648 , true , 0, 0, {0, 0, 0}},
        {P15se, "P15se",  417.392465 ,  5.913402 ,  1222.392465 , true , 0, 0, {0, 0, 0}},
        {P16sw, "P16sw",  420.224073 ,  6.112400 ,  1360.224073 , true , 0, 0, {0, 0, 0}},
        {VNu  , "VNu"  ,  424.774791 ,  6.582503 ,   514.774791 , 0    , 0, 0, {0, 0, 0}},
        {VEu  , "VEu"  ,  429.370026 ,  6.455723 ,   529.370026 , 0    , 0, 0, {0, 0, 0}},
        {VSu  , "VSu"  ,  428.145046 , 13.088752 ,   478.145046 , 0    , 0, 0, {0, 0, 0}},
        {VWu  , "VWu"  ,  429.907221 , 18.225902 ,   494.907221 , 0    , 0, 0, {0, 0, 0}},
        {VBne , "VBne" ,  423.299925 ,  6.750211 ,   603.299925 , 0    , 0, 0, {0, 0, 0}},
        {L9sw , "L9sw" ,  438.722418 , 19.493861 ,   478.722418 , 0    , 0, 0, {0, 0, 0}},
        {L7nw , "L7nw" ,  422.969108 , 15.874327 ,   512.969108 , 0    , 0, 0, {0, 0, 0}},
        {L1ne , "L1ne" ,  415.129171 , 25.826501 ,   720.129171 , 0    , 0, 0, {0, 0, 0}},
        {L8w  , "L8w"  ,  413.458845 , 11.736555 ,   498.458845 , 0    , 0, 0, {0, 0, 0}},
        {L5c  , "L5c"  ,  430.865169 ,  7.090569 ,  1045.865169 , 0    , 0, 0, {0, 0, 0}},
        {T1w  , "T1w"  ,  312.678994 ,  5.263946 ,   372.678994 , 0    , 0, 0, {0, 0, 0}},
        {T2w  , "T2w"  ,  318.003454 ,  4.578126 ,   420.894085 , 0    , 0, 0, {0, 0, 0}},
        {T3w  , "T3w"  ,  310.250425 ,  4.322035 ,   426.860599 , 0    , 0, 0, {0, 0, 0}},
        {T4w  , "T4w"  ,  307.053455 ,  4.358171 ,   408.844309 , 0    , 0, 0, {0, 0, 0}},
        {T5w  , "T5w"  ,  315.675663 ,  4.549825 ,   438.424787 , 0    , 0, 0, {0, 0, 0}},
        {T6w  , "T6w"  ,  309.535722 ,  4.305248 ,   436.061963 , 0    , 0, 0, {0, 0, 0}},
        {P1nw , "P1nw" ,  402.542064 , 65.379367 ,   637.542064 , true , 0, 0, {0, 0, 0}},
        {P2ne , "P2ne" ,  328.774567 ,  9.286540 ,   593.774567 , true , 0, 0, {0, 0, 0}},
        {P3nw , "P3nw" ,  321.547513 ,  7.840695 ,   656.547513 , true , 0, 0, {0, 0, 0}},
        {P4ne , "P4ne" ,  332.553483 ,  7.773640 ,   927.553483 , true , 0, 0, {0, 0, 0}},
        {P5nw , "P5nw" ,  328.824463 ,  7.317108 ,   598.824463 , true , 0, 0, {0, 0, 0}},
        {P6ne , "P6ne" ,  326.966478 ,  7.821378 ,   606.966478 , true , 0, 0, {0, 0, 0}},
        {P7nw , "P7nw" ,  327.450339 ,  6.574737 ,   897.450339 , true , 0, 0, {0, 0, 0}},
        {P8ne , "P8ne" ,  318.161227 ,  8.743401 ,   948.161227 , true , 0, 0, {0, 0, 0}},
        {P9nw , "P9nw" ,  324.454721 ,  8.411402 ,   874.454721 , true , 0, 0, {0, 0, 0}},
        {P10ne, "P10ne",  315.770293 ,  7.612869 ,   740.770293 , true , 0, 0, {0, 0, 0}},
        {P11nw, "P11nw",  321.138785 ,  8.858730 ,   991.138785 , true , 0, 0, {0, 0, 0}},
        {P12ne, "P12ne",  328.406985 ,  8.270837 ,   818.406985 , true , 0, 0, {0, 0, 0}},
        {P13nw, "P13nw",  334.606293 ,  8.780044 ,  1064.606293 , true , 0, 0, {0, 0, 0}},
        {P14ne, "P14ne",  325.424411 ,  6.694034 ,   425.424411 , true , 0, 0, {0, 0, 0}},
        {P15nw, "P15nw",  312.662737 ,  6.885861 ,   377.662737 , true , 0, 0, {0, 0, 0}},
        {P16ne, "P16ne",  320.643009 ,  5.980882 ,   405.643009 , true , 0, 0, {0, 0, 0}},
        {VNd  , "VNd"  ,  329.124665 ,  7.170878 ,   389.124665 , 0    , 0, 0, {0, 0, 0}},
        {VEd  , "VEd"  ,  337.051129 ,  6.779592 ,   387.051129 , 0    , 0, 0, {0, 0, 0}},
        {VSd  , "VSd"  ,  331.479400 ,  6.541011 ,   381.479400 , 0    , 0, 0, {0, 0, 0}},
        {VWd  , "VWd"  ,  347.221667 ,  6.750870 ,   392.221667 , 0    , 0, 0, {0, 0, 0}},
        {VBsw , "VBsw" ,  341.079814 ,  7.080330 ,   531.079814 , 0    , 0, 0, {0, 0, 0}},
        {L3se , "L3se" ,  331.311224 ,  6.669596 ,   386.311224 , 0    , 0, 0, {0, 0, 0}},
        {L2e  , "L2e"  ,  334.087855 ,  7.406568 ,   649.087855 , 0    , 0, 0, {0, 0, 0}},
        {L6s  , "L6s"  ,  336.917577 ,  6.948810 ,   386.917577 , 0    , 0, 0, {0, 0, 0}},
        {L4n  , "L4n"  ,  337.570442 ,  5.134804 ,   837.570442 , 0    , 0, 0, {0, 0, 0}},
        {NC   , "NC"   ,  331.487573 ,  6.142241 ,          0   , 0    , 0, 0, {0, 0, 0}}
    }};
    return;
}


void EcalADC::initLGaggregate () {
    lgPMT ={{
        {T1e  , "T1e"  ,  399.008924 ,  3.268237 ,   403.239352 , 0    , 0, 0,  {0, 0, 0}},
        {T2e  , "T2e"  ,  399.584691 ,  3.384526 ,   447.308226 , 0    , 0, 0,  {0, 0, 0}},
        {T3e  , "T3e"  ,  522.220569 , 53.151085 ,   411.178542 , 0    , 0, 0,  {0, 0, 0}},
        {T4e  , "T4e"  ,  392.300114 ,  3.097322 ,   401.664659 , 0    , 0, 0,  {0, 0, 0}},
        {T5e  , "T5e"  ,  418.923692 ,  2.974240 ,   425.830162 , 0    , 0, 0,  {0, 0, 0}},
        {T6e  , "T6e"  ,  400.779195 ,  3.118238 ,   407.435170 , 0    , 0, 0,  {0, 0, 0}},
        {P1se , "P1se" ,  432.192769 ,  6.757755 ,   431.843263 , true , 0, 0,  {0, 0, 0}},
        {P2sw , "P2sw" ,  430.285032 , 11.007667 ,   429.923867 , true , 0, 0,  {0, 0, 0}},
        {P3se , "P3se" ,  431.893790 ,  8.433011 ,   431.652047 , true , 0, 0,  {0, 0, 0}},
        {P4sw , "P4sw" ,  442.374399 , 17.982996 ,   440.950400 , true , 0, 0,  {0, 0, 0}},
        {P5se , "P5se" ,  403.787713 ,  2.949230 ,   406.112563 , true , 0, 0,  {0, 0, 0}},
        {P6sw , "P6sw" ,  426.182138 , 13.230503 ,   428.073099 , true , 0, 0,  {0, 0, 0}},
        {P7se , "P7se" ,  447.339483 , 24.364488 ,   449.076626 , true , 0, 0,  {0, 0, 0}},
        {P8sw , "P8sw" ,  434.475100 , 21.708419 ,   446.011332 , true , 0, 0,  {0, 0, 0}},
        {P9se , "P9se" ,  420.429008 , 13.965482 ,   422.585494 , true , 0, 0,  {0, 0, 0}},
        {P10sw, "P10sw",  435.153799 , 20.107288 ,   435.245457 , true , 0, 0,  {0, 0, 0}},
        {P11se, "P11se",  439.867632 , 18.227464 ,   441.495067 , true , 0, 0,  {0, 0, 0}},
        {P12sw, "P12sw",  443.912112 , 14.300461 ,   446.128243 , true , 0, 0,  {0, 0, 0}},
        {P13se, "P13se",  446.087428 , 22.311186 ,   450.293558 , true , 0, 0,  {0, 0, 0}},
        {P14sw, "P14sw",  463.972819 , 24.098870 ,   466.436905 , true , 0, 0,  {0, 0, 0}},
        {P15se, "P15se",  467.835340 , 29.908638 ,   467.549325 , true , 0, 0,  {0, 0, 0}},
        {P16sw, "P16sw",  459.237594 , 33.453373 ,   461.394218 , true , 0, 0,  {0, 0, 0}},
        {VNu  , "VNu"  ,  395.663711 ,  4.076380 ,   402.178176 , 0    , 0, 0,  {0, 0, 0}},
        {VEu  , "VEu"  ,  396.964784 ,  3.217283 ,   404.444171 , 0    , 0, 0,  {0, 0, 0}},
        {VSu  , "VSu"  ,  416.334958 ,  3.104289 ,   419.981376 , 0    , 0, 0,  {0, 0, 0}},
        {VWu  , "VWu"  ,  396.684153 ,  2.932975 ,   402.386454 , 0    , 0, 0,  {0, 0, 0}},
        {VBne , "VBne" ,  402.246254 ,  3.154824 ,   414.047232 , 0    , 0, 0,  {0, 0, 0}},
        {L9sw , "L9sw" ,  401.651129 ,  3.065235 ,   405.447595 , 0    , 0, 0,  {0, 0, 0}},
        {L7nw , "L7nw" ,  397.538343 ,  3.182374 ,   408.138116 , 0    , 0, 0,  {0, 0, 0}},
        {L1ne , "L1ne" ,  407.914169 ,  3.105616 ,   437.641120 , 0    , 0, 0,  {0, 0, 0}},
        {L8w  , "L8w"  ,  392.045656 ,  3.218268 ,   400.759519 , 0    , 0, 0,  {0, 0, 0}},
        {L5c  , "L5c"  ,  411.536058 ,  3.010167 ,   470.688332 , 0    , 0, 0,  {0, 0, 0}},
        {T1w  , "T1w"  ,  304.345074 ,  3.609370 ,   307.430866 , 0    , 0, 0,  {0, 0, 0}},
        {T2w  , "T2w"  ,  300.802398 , 19.557175 ,   299.718386 , 0    , 0, 0,  {0, 0, 0}},
        {T3w  , "T3w"  ,  355.291697 ,  8.634542 ,   303.702851 , 0    , 0, 0,  {0, 0, 0}},
        {T4w  , "T4w"  ,  304.661661 ,  3.563051 ,   311.278210 , 0    , 0, 0,  {0, 0, 0}},
        {T5w  , "T5w"  ,  298.446013 ,  3.482449 ,   307.567141 , 0    , 0, 0,  {0, 0, 0}},
        {T6w  , "T6w"  ,  309.383422 ,  3.482624 ,   322.993607 , 0    , 0, 0,  {0, 0, 0}},
        {P1nw , "P1nw" ,  335.841188 , 13.207743 ,   333.398119 , true , 0, 0,  {0, 0, 0}},
        {P2ne , "P2ne" ,  328.413679 , 15.605322 ,   329.712036 , true , 0, 0,  {0, 0, 0}},
        {P3nw , "P3nw" ,  370.772189 , 24.145603 ,   335.538383 , true , 0, 0,  {0, 0, 0}},
        {P4ne , "P4ne" ,  359.434118 , 20.855813 ,   355.684706 , true , 0, 0,  {0, 0, 0}},
        {P5nw , "P5nw" ,  335.937379 , 10.226122 ,   335.818005 , true , 0, 0,  {0, 0, 0}},
        {P6ne , "P6ne" ,  327.667156 ,  9.556422 ,   324.490332 , true , 0, 0,  {0, 0, 0}},
        {P7nw , "P7nw" ,  347.850633 , 20.023048 ,   347.557803 , true , 0, 0,  {0, 0, 0}},
        {P8ne , "P8ne" ,  359.138266 , 22.355495 ,   354.606778 , true , 0, 0,  {0, 0, 0}},
        {P9nw , "P9nw" ,  341.254559 , 19.109021 ,   343.348960 , true , 0, 0,  {0, 0, 0}},
        {P10ne, "P10ne",  342.170585 , 18.816923 ,   343.481687 , true , 0, 0,  {0, 0, 0}},
        {P11nw, "P11nw",  380.749801 , 22.141895 ,   349.727029 , true , 0, 0,  {0, 0, 0}},
        {P12ne, "P12ne",  343.777956 , 18.753798 ,   344.095124 , true , 0, 0,  {0, 0, 0}},
        {P13nw, "P13nw",  358.998911 , 24.947332 ,   363.255529 , true , 0, 0,  {0, 0, 0}},
        {P14ne, "P14ne",  384.513106 , 32.911301 ,   311.611647 , true , 0, 0,  {0, 0, 0}},
        {P15nw, "P15nw",  364.697157 ,  8.446660 ,   302.963165 , true , 0, 0,  {0, 0, 0}},
        {P16ne, "P16ne",  395.070524 , 38.498187 ,   326.520920 , true , 0, 0,  {0, 0, 0}},
        {VNd  , "VNd"  ,  311.771857 ,  3.560220 ,   316.243719 , 0    , 0, 0,  {0, 0, 0}},
        {VEd  , "VEd"  ,  314.996470 , 18.185264 ,   320.851029 , 0    , 0, 0,  {0, 0, 0}},
        {VSd  , "VSd"  ,  308.885617 ,  3.508393 ,   312.461533 , 0    , 0, 0,  {0, 0, 0}},
        {VWd  , "VWd"  ,  314.055274 ,  3.325341 ,   317.915942 , 0    , 0, 0,  {0, 0, 0}},
        {VBsw , "VBsw" ,  308.673573 ,  3.521295 ,   323.238075 , 0    , 0, 0,  {0, 0, 0}},
        {L3se , "L3se" ,  313.814653 ,  3.519594 ,   319.099616 , 0    , 0, 0,  {0, 0, 0}},
        {L2e  , "L2e"  ,  318.283583 ,  3.499119 ,   348.363413 , 0    , 0, 0,  {0, 0, 0}},
        {L6s  , "L6s"  ,  298.484384 ,  9.275479 ,   302.829829 , 0    , 0, 0,  {0, 0, 0}},
        {L4n  , "L4n"  ,  308.245027 ,  3.764058 ,   362.481758 , 0    , 0, 0,  {0, 0, 0}},
        {NC   , "NC"   ,  309.820007 ,  4.063671 ,          0   , 0    , 0, 0,  {0, 0, 0}}
    }};
    return;
}


void EcalADC::initMCshape() {
linearFitParams={
{P1se, 51, 10.526381289940467, -10854.00060739429},
{P1se, 100, 3.7214986980690776, -1301.8681931317435},
{P1se, 125, 3.1191781565394101, -797.91004783981941},
{P1se, 154, 2.8245879363368713, -728.82890648931118},
{P1se, 174, 2.5281212279390184, -490.4664837622355},
{P1se, 228, 2.2187457691894577, -419.8740690582527},
{P2sw, 51, 5.9489300139163808, -3786.4530501069044},
{P2sw, 100, 3.8388760494992979, -1277.2951300491541},
{P2sw, 125, 3.2101853780455945, -791.40347365895479},
{P2sw, 154, 2.6881086142322075, -467.16448155350417},
{P2sw, 174, 2.5662919605756453, -430.08812630174862},
{P2sw, 228, 2.2614484525766305, -283.91311729189408},
{P3se, 100, 4.6841385809535936, -2610.7201389233942},
{P3se, 125, 3.379602192624672, -1300.9741609016769},
{P3se, 154, 2.7833329461388687, -807.07337204041426},
{P3se, 174, 2.5159640372190584, -656.12584119887754},
{P3se, 228, 2.1684557140996787, -415.86976084352239},
{P4sw, 100, 5.3195068796872604, -3758.4017635153218},
{P4sw, 125, 3.8133459183651071, -1759.6395869686062},
{P4sw, 154, 2.793669956078757, -906.30343327782191},
{P4sw, 174, 2.5304498255773673, -703.42376568954751},
{P4sw, 228, 2.1572382511274708, -442.38942832207528},
{P5se, 154, 0.17251729375230818, 8.7922996145386243},
{P6sw, 100, 3.2919702126287991, -1505.202635347307},
{P6sw, 125, 3.4531717172459953, -949.93614329007119},
{P6sw, 154, 2.6572854319283739, -535.38703618736179},
{P6sw, 174, 2.4411938447222008, -347.37252257558413},
{P6sw, 228, 2.1329162097197307, -231.08707144007803},
{P7se, 100, 2.4083311116104973, -3405.0142639595047},
{P7se, 125, 4.5287582393911352, -3253.6155610865935},
{P7se, 154, 3.1996370267925047, -1489.3607031583433},
{P7se, 174, 2.6921099299000355, -1012.7464953619562},
{P7se, 228, 2.0330176287630444, -514.50120011989463},
{P8sw, 125, 4.3081946344505795, -2781.9147608151807},
{P8sw, 154, 2.9722512152588982, -1155.4748330270156},
{P8sw, 174, 2.6954608876933559, -835.12875334677437},
{P8sw, 228, 2.0191151249914912, -420.77945080256268},
{P9se, 125, 3.6458068021645853, -1850.2006223262783},
{P9se, 154, 2.8240437656084447, -751.69204441253532},
{P9se, 174, 2.490488686005905, -531.1396502326354},
{P9se, 228, 1.965150351710796, -288.62059257729464},
{P10sw, 125, 1.8197708494921023, -925.95290199929036},
{P10sw, 154, 2.8960460921278792, -1088.9386721297467},
{P10sw, 174, 2.4654299499887169, -712.4995778067522},
{P10sw, 228, 1.912792933074495, -362.76095895625537},
{P11se, 125, 0.8736557084984089, -499.27701770364098},
{P11se, 154, 2.9229392381280235, -1327.4479874049496},
{P11se, 174, 2.3066641566265038, -761.86271278218089},
{P11se, 228, 1.7833086192900982, -371.65427977316426},
{P12sw, 154, 2.7655723286294003, -1365.4745386493303},
{P12sw, 174, 2.3477958849808069, -810.4816171090331},
{P12sw, 228, 1.7648739182313344, -368.24287073278055},
{P13se, 154, 2.9719980472178493, -2433.1502559171968},
{P13se, 174, 2.2860660419863494, -1229.2232748745021},
{P13se, 228, 1.6263806985966001, -494.50553314267063},
{P14sw, 154, 2.6916099240740894, -2602.8312034680189},
{P14sw, 174, 2.2238369951446142, -1308.5395024776517},
{P14sw, 228, 1.5401527506707919, -476.58349850048938},
{P15se, 154, 0.52249301790278213, 718.42538957406884},
{P15se, 174, 2.3210489546060322, -1887.5555309243668},
{P15se, 228, 1.4193246699431563, -597.56408261905369},
{P16sw, 154, 0.5468227498517142, -457.01928479197971},
{P16sw, 174, 2.1686221578674547, -2152.0557853628275},
{P16sw, 228, 1.3097104254629461, -591.1545111273623},
{P1nw, 51, 15.853247243609312, -9987.8849260799398},
{P1nw, 100, 5.6152757626320122, -1390.6758321161713},
{P1nw, 125, 5.2458540479732809, -990.69679140995186},
{P1nw, 174, 45.823639485880875, -7576.173865411899},
{P1nw, 228, 82.040099145011752, -10193.943375080753},
{P2ne, 51, 7.8832355999694865, -3544.2921544509904},
{P2ne, 100, 5.8167516031554536, -1342.9459145839728},
{P2ne, 125, 4.6913820753193933, -821.96073260395792},
{P2ne, 154, 3.6355606846280488, -406.77005908125932},
{P2ne, 174, 4.7574065758554829, 136.5946916013234},
{P2ne, 228, 1.4262981479351444, 279.30494368745673},
{P3nw, 100, 6.1785996838894812, -2048.9533358018653},
{P3nw, 125, 4.3898788567159963, -984.2419700948459},
{P3nw, 154, 3.7385938016213376, -657.09751187458301},
{P3nw, 174, 3.3933675669319077, -531.23964405351671},
{P3nw, 228, 0.052866223138467089, 197.08353598352394},
{P4ne, 100, 8.2305145792681671, -5552.428102854692},
{P4ne, 125, 5.6261619424206177, -2495.9596245378129},
{P4ne, 154, 4.235653008368037, -1363.1411257517584},
{P4ne, 174, 3.7390588247030765, -1021.8770189296092},
{P4ne, 228, 3.0402310205546437, -578.49194733380034},
{P5nw, 100, 5.9408886696751146, -2035.9150992490777},
{P5nw, 125, 4.5900847904191586, -947.62456876531292},
{P5nw, 154, 3.7271073925934277, -543.80221638816545},
{P5nw, 228, 1.7788061641624573, 161.36762532741588},
{P6ne, 100, 5.5919393794387542, -2448.9975761874643},
{P6ne, 125, 5.5407596753217589, -1246.545456154342},
{P6ne, 154, 3.9168547412344923, -627.79634395947471},
{P6ne, 174, 3.4966398444606286, -506.82856497187174},
{P6ne, 228, 1.3297992885856631, 454.3742742050897},
{P7nw, 100, 3.1861564475400606, -3161.27843288543},
{P7nw, 125, 6.5273662650566804, -3456.6952203115579},
{P7nw, 154, 4.457178999987832, -1523.1373170172808},
{P7nw, 174, 3.7458351345233556, -1034.1323328299852},
{P7nw, 228, 2.7948434774774604, -517.92892183940921},
{P8ne, 125, 7.2623846618782215, -4747.3495897919229},
{P8ne, 154, 4.519778583273359, -1744.7543744720488},
{P8ne, 174, 4.0919597202650291, -1306.4883266415745},
{P8ne, 228, 2.8783299296795501, -607.64244313360246},
{P9nw, 125, 6.4431373520816253, -4277.1794319563378},
{P9nw, 154, 4.7875208556021143, -1647.8100886052778},
{P9nw, 174, 3.9647801338024866, -1113.3605042103654},
{P9nw, 228, 2.8813881661677643, -536.81451994407382},
{P10ne, 125, 2.5092259227511771, -720.86206589798155},
{P10ne, 154, 4.6983617777422433, -1333.3487707514078},
{P10ne, 174, 3.7143185902238107, -795.80584431351485},
{P10ne, 228, 2.7948275951894015, -353.69224611453006},
{P11nw, 125, 1.691733027400053, -1046.0902851844826},
{P11nw, 154, 6.0546584839479864, -3026.5191179086933},
{P11nw, 174, 4.4216696403352449, -1651.4392857675498},
{P11nw, 228, 3.0625742630710464, -707.29202662868477},
{P12ne, 154, 4.9606386755929739, -1879.2777910071438},
{P12ne, 174, 3.9265813292966389, -1032.1446537631309},
{P12ne, 228, 2.7764035616361786, -434.87466858732012},
{P13nw, 154, 5.3887869604331851, -3250.2495681833843},
{P13nw, 174, 4.3053066786636229, -1765.7762870566446},
{P13nw, 228, 2.7759277851024931, -638.32945972555433},
{P14ne, 228, 1.0940600898074331, 518.07473242327626},
{P15nw, 228, 1.0682148991287539, 375.35366954540126},
{P16ne, 154, 19.653989344114702, -478.23589024990417}
};
}



